import re, urllib
def CLASSES():  
    import urllib, re
    print('\nThese are the majors offered at University of Maryland. The list of classes with the major you choose will be saved to a file named CLASSES')
    f = open('CLASSES', 'w')
    A = []
    B = []
    a_list = []
    b_list = []
    _4_letter_code = []
    link = urllib.request.urlopen('https://app.testudo.umd.edu/soc/')
    count = 0
    for each in link:
        each = each.decode()
        name = re.findall('prefix-name nine columns">(.*)<', each)
        if len(name)>0:
            name = str(name).replace("'","").replace("[","").replace("]","")
            #print(name)
            a_list.append(name)
            b_list.append(a_list)
            a_list = []
            A.append(name)
            count += 1
            if count == 2:
                B.append(A)
                A = []
                count = 0
                
        a = re.findall('prefix-abbrev push_one two columns">(.*)<', each)
        if len(a)>0:
            a = str(a).replace("'","").replace("[","").replace("]","")
            #print(a)
            a_list.append(a)
            A.append(a)
            _4_letter_code.append(a)
    for a, b, c, d in B:
        print('%s-%-60s %s-%s'%(a, b, c, d))
    user_input = input('If you see a class you are interested in, please enter the 4 letter code here>>>')
    while True:  
        user_input = user_input.upper()
        if user_input in _4_letter_code:
            break
        user_input = input("Sorry, '%s' does not match one of the 4 letter codes shown. Please try another 4 letter code."%(user_input))
    url = 'https://app.testudo.umd.edu/soc/20200%s/%s'%(sem, user_input)
    link = urllib.request.urlopen(url)
    c = []
    for each in link:
        each = each.decode()
        x = re.findall('course-id">(.*)<', each)
        if len(x)>0:
            x= str(x).replace("'", '').replace('[','').replace(']','')
            c.append(x)
    A1 = []
    A2 = []
    count = 0
    cnt = 0
    while True:
        A1.append(c[count])
        count += 1
        cnt += 1
        if cnt == 4:
            A2.append(A1)
            cnt = 0
            A1 = []
        if count == len(c):
            A2.append(A1)
            break
    
    for each in B:
        if each[0]==user_input:
            print('\nThese are the classes associated with %s.'%(each[1]))
            f.write('These are the classes associated with %s.\n'%(each[1]))
            for each in A2:
                if len(each) == 4:
                    print('%-20s %-20s %-20s %s'%(each[0], each[1], each[2], each[3]))
                    f.write('%-20s %-20s %-20s %s'%(each[0], each[1], each[2], each[3]))
                    f.write('\n')
                if len(each) == 3:
                    print('%-20s %-20s %s'%(each[0], each[1], each[2]))
                    f.write('%-20s %-20s %s'%(each[0], each[1], each[2]))
                    f.write('\n')
                if len(each) == 2:
                    print('%-20s %s'%(each[0], each[1]))
                    f.write('%-20s %s'%(each[0], each[1]))
                    f.write('\n')
                if len(each) == 1:
                    print(each)
    f.close()
#majors = []
#courses = []
#import re, urllib
#url = urllib.request.urlopen('https://app.testudo.umd.edu/soc/')
#for each in url:
    #each = each.decode()
    #x = re.findall('prefix-abbrev push_one two columns">(.*)<', each)
    #if len(x)>0:
        #x = str(x).replace("'","").replace("[","").replace("]","")
        #majors.append(x)

#for each in majors:
    #link = 'https://app.testudo.umd.edu/soc/202008/%s'%(each)
    #url = urllib.request.urlopen(link)
    #for each in url:
        #each = each.decode()
        #x = re.findall('course-id">(.*)<', each)
        #if len(x)>0:
            #x = str(x).replace("'","").replace("[","").replace("]","")
            #courses.append(x)
#print(courses)
#Reason for not running these lines is because it takes too long to seach each web page.
#Blank web page will be created to store all of these classes so code doesnt look as long.

#List of all courses:
courses = ['AASP100', 'AASP100H', 'AASP101', 'AASP200', 'AASP202', 'AASP202H', 'AASP210', 'AASP298C', 'AASP298I', 'AASP298L', 'AASP298M', 'AASP298P', 'AASP301', 'AASP310', 'AASP313', 'AASP386', 'AASP396', 'AASP397', 'AASP398C', 'AASP398E', 'AASP398G', 'AASP398P', 'AASP398Q', 'AASP398R', 'AASP401', 'AASP478B', 'AASP498J', 'AASP498O', 'AASP499P', 'AAST200', 'AAST233', 'AAST298B', 'AAST378', 'AAST388', 'AAST394', 'AAST398D', 'AAST398F', 'AAST398L', 'AAST398N', 'AAST498J', 'AGNR200', 'AGNR301', 'AGNR388', 'AGNR499', 'AMSC460', 'AMSC466', 'AMSC498A', 'AMSC660', 'AMSC663', 'AMSC666', 'AMSC673', 'AMSC689', 'AMSC714', 'AMSC799', 'AMSC808A', 'AMSC808N', 'AMSC898', 'AMSC899', 'AMST101', 'AMST202', 'AMST203', 'AMST204', 'AMST205', 'AMST262', 'AMST298C', 'AMST298D', 'AMST298Q', 'AMST328J', 'AMST328K', 'AMST328L', 'AMST328R', 'AMST328U', 'AMST328W', 'AMST328X', 'AMST340', 'AMST386', 'AMST388', 'AMST398', 'AMST418H', 'AMST428N', 'AMST450', 'AMST498G', 'AMST601', 'AMST628F', 'AMST655', 'AMST698', 'AMST798', 'AMST799', 'AMST857', 'AMST878A', 'AMST878B', 'AMST878C', 'AMST898', 'AMST899', 'ANSC101', 'ANSC103', 'ANSC204', 'ANSC205', 'ANSC210', 'ANSC220', 'ANSC227', 'ANSC232', 'ANSC252', 'ANSC255', 'ANSC314', 'ANSC359', 'ANSC379', 'ANSC388', 'ANSC389', 'ANSC399', 'ANSC410', 'ANSC417', 'ANSC446', 'ANSC447', 'ANSC450', 'ANSC455', 'ANSC460', 'ANSC489', 'ANSC660', 'ANSC688I', 'ANSC688M', 'ANSC698C', 'ANSC698D', 'ANSC699', 'ANSC799', 'ANSC898', 'ANSC899', 'ANTH210', 'ANTH222', 'ANTH240', 'ANTH260', 'ANTH263', 'ANTH264', 'ANTH265', 'ANTH266', 'ANTH305', 'ANTH322', 'ANTH323', 'ANTH358A', 'ANTH358B', 'ANTH358C', 'ANTH360', 'ANTH386', 'ANTH398A', 'ANTH398N', 'ANTH415', 'ANTH433', 'ANTH436', 'ANTH447', 'ANTH451', 'ANTH453', 'ANTH461', 'ANTH462', 'ANTH465', 'ANTH476', 'ANTH477', 'ANTH485', 'ANTH486', 'ANTH487', 'ANTH601', 'ANTH606', 'ANTH615', 'ANTH633', 'ANTH636', 'ANTH647', 'ANTH651', 'ANTH653', 'ANTH655', 'ANTH661', 'ANTH688A', 'ANTH688I', 'ANTH689A', 'ANTH701', 'ANTH712', 'ANTH741', 'ANTH742', 'ANTH760', 'ANTH788', 'ANTH789', 'ANTH857', 'ANTH898', 'ANTH899', 'AOSC123', 'AOSC200', 'AOSC201', 'AOSC375', 'AOSC399', 'AOSC400', 'AOSC420', 'AOSC431', 'AOSC470', 'AOSC493', 'AOSC494', 'AOSC499', 'AOSC600', 'AOSC610', 'AOSC614', 'AOSC620', 'AOSC652', 'AOSC658N', 'AOSC670', 'AOSC680', 'AOSC798', 'AOSC898', 'AOSC899', 'ARAB104', 'ARAB204', 'ARAB206', 'ARAB304', 'ARAB399B', 'ARAB401', 'ARAB499C', 'ARAB499X', 'ARCH170', 'ARCH171', 'ARCH201', 'ARCH226', 'ARCH270', 'ARCH271', 'ARCH300', 'ARCH400', 'ARCH401', 'ARCH403', 'ARCH404', 'ARCH406', 'ARCH419', 'ARCH426', 'ARCH427', 'ARCH428E', 'ARCH428I', 'ARCH428K', 'ARCH428N', 'ARCH428P', 'ARCH428T', 'ARCH429', 'ARCH430', 'ARCH443', 'ARCH449', 'ARCH459', 'ARCH460', 'ARCH462', 'ARCH464', 'ARCH466', 'ARCH467', 'ARCH470', 'ARCH472', 'ARCH478T', 'ARCH479', 'ARCH489', 'ARCH600', 'ARCH611', 'ARCH628E', 'ARCH628K', 'ARCH628N', 'ARCH628P', 'ARCH628T', 'ARCH629', 'ARCH678C', 'ARCH678L', 'ARCH678T', 'ARCH679', 'ARCH700', 'ARCH770', 'ARCH797', 'ARCH798', 'ARCH799', 'AREC200', 'AREC241', 'AREC250', 'AREC306', 'AREC326', 'AREC365', 'AREC380', 'AREC386', 'AREC388', 'AREC399', 'AREC422', 'AREC426', 'AREC427', 'AREC430', 'AREC453', 'AREC455', 'AREC620', 'AREC623', 'AREC699', 'AREC785', 'AREC799', 'AREC829', 'AREC832', 'AREC845', 'AREC847', 'AREC892', 'AREC898', 'AREC899', 'ARHU158Q', 'ARHU158T', 'ARHU158V', 'ARHU158W', 'ARHU230', 'ARHU240', 'ARHU275', 'ARHU286', 'ARHU298L', 'ARHU309', 'ARHU319A', 'ARHU319B', 'ARHU319C', 'ARHU338', 'ARHU375', 'ARHU386', 'ARHU440', 'ARHU468A', 'ARHU486', 'ARHU489', 'ARMY106', 'ARMY201', 'ARMY301', 'ARMY401', 'ARSC059', 'ARSC100', 'ARSC200', 'ARSC300', 'ARSC400', 'ARTH200', 'ARTH201', 'ARTH260', 'ARTH260C', 'ARTH262', 'ARTH305', 'ARTH359I', 'ARTH370', 'ARTH386', 'ARTH389A', 'ARTH389B', 'ARTH389G', 'ARTH389L', 'ARTH389Q', 'ARTH488A', 'ARTH488B', 'ARTH489O', 'ARTH489Q', 'ARTH489V', 'ARTH498', 'ARTH499', 'ARTH692', 'ARTH738G', 'ARTH779F', 'ARTH798', 'ARTH799', 'ARTH898', 'ARTH899', 'ARTT100', 'ARTT110', 'ARTT110S', 'ARTT150', 'ARTT200', 'ARTT210', 'ARTT255', 'ARTT320', 'ARTT330', 'ARTT330H', 'ARTT331', 'ARTT331H', 'ARTT333', 'ARTT333H', 'ARTT341', 'ARTT341H', 'ARTT343', 'ARTT343H', 'ARTT355', 'ARTT356', 'ARTT370', 'ARTT386', 'ARTT389', 'ARTT399', 'ARTT418B', 'ARTT418H', 'ARTT428', 'ARTT428H', 'ARTT438A', 'ARTT438C', 'ARTT438D', 'ARTT438H', 'ARTT454', 'ARTT457', 'ARTT479D', 'ARTT479H', 'ARTT480H', 'ARTT481', 'ARTT489C', 'ARTT498A', 'ARTT498B', 'ARTT498H', 'ARTT618', 'ARTT628', 'ARTT638', 'ARTT648', 'ARTT698A', 'ARTT698B', 'ARTT698C', 'ARTT699A', 'ARTT699B', 'ARTT718', 'ARTT728', 'ARTT738', 'ARTT748', 'ARTT768', 'ARTT798A', 'ARTT798B', 'ARTT799', 'ASTR100', 'ASTR101', 'ASTR120', 'ASTR220', 'ASTR230', 'ASTR288', 'ASTR288C', 'ASTR288I', 'ASTR300', 'ASTR310', 'ASTR330', 'ASTR340', 'ASTR380', 'ASTR399', 'ASTR406', 'ASTR415', 'ASTR498', 'ASTR601', 'ASTR615', 'ASTR688B', 'ASTR695', 'ASTR699', 'ASTR799', 'ASTR898', 'ASTR899', 'BCHM461', 'BCHM462', 'BCHM463', 'BCHM464', 'BCHM465', 'BCHM661', 'BCHM662', 'BCHM669E', 'BCHM671', 'BCHM698', 'BCHM699', 'BCHM799', 'BCHM889A', 'BCHM889C', 'BCHM889D', 'BCHM889F', 'BCHM889J', 'BCHM889M', 'BCHM889P', 'BCHM898', 'BCHM899', 'BEES608A', 'BEES799', 'BEES898', 'BEES899', 'BIOE120', 'BIOE121', 'BIOE221', 'BIOE232', 'BIOE241', 'BIOE331', 'BIOE340', 'BIOE371', 'BIOE372', 'BIOE399', 'BIOE399H', 'BIOE404', 'BIOE420', 'BIOE437', 'BIOE442', 'BIOE453', 'BIOE457', 'BIOE464', 'BIOE485', 'BIOE489C', 'BIOE489G', 'BIOE489H', 'BIOE489M', 'BIOE489U', 'BIOE489V', 'BIOE489W', 'BIOE489Y', 'BIOE601', 'BIOE605', 'BIOE608', 'BIOE612', 'BIOE658G', 'BIOE658M', 'BIOE658R', 'BIOE689', 'BIOE689G', 'BIOE689K', 'BIOE689P', 'BIOE799', 'BIOE898', 'BIOE899', 'BIOL608E', 'BIOL608K', 'BIOL608N', 'BIOL609', 'BIOL667', 'BIOL671', 'BIOL704', 'BIOL708B', 'BIOL708E', 'BIOL708Q', 'BIOL708X', 'BIOL709C', 'BIOL709W', 'BIOL799', 'BIOL898', 'BIOL899', 'BIOM301', 'BIOM405', 'BIOM601', 'BIOM603', 'BIOM688A', 'BIOM698', 'BIPH698L', 'BIPH699', 'BIPH704', 'BIPH898', 'BIPH899', 'BISI701', 'BISI712', 'BISI799', 'BISI898', 'BISI899', 'BMGT110', 'BMGT110F', 'BMGT190H', 'BMGT207', 'BMGT210', 'BMGT220', 'BMGT221', 'BMGT221H', 'BMGT230', 'BMGT230B', 'BMGT289A', 'BMGT289B', 'BMGT289D', 'BMGT289E', 'BMGT289I', 'BMGT289J', 'BMGT299B', 'BMGT301', 'BMGT301F', 'BMGT302', 'BMGT302F', 'BMGT310', 'BMGT311', 'BMGT313', 'BMGT313F', 'BMGT321', 'BMGT323', 'BMGT326', 'BMGT332', 'BMGT340', 'BMGT340F', 'BMGT340N', 'BMGT341', 'BMGT342F', 'BMGT343', 'BMGT345', 'BMGT347', 'BMGT350', 'BMGT350M', 'BMGT350N', 'BMGT352', 'BMGT353', 'BMGT360', 'BMGT362', 'BMGT363', 'BMGT364', 'BMGT364M', 'BMGT364N', 'BMGT365', 'BMGT366', 'BMGT367', 'BMGT370', 'BMGT372', 'BMGT372M', 'BMGT380', 'BMGT380N', 'BMGT382', 'BMGT385', 'BMGT390H', 'BMGT392', 'BMGT397', 'BMGT398', 'BMGT398A', 'BMGT398C', 'BMGT398T', 'BMGT402', 'BMGT403', 'BMGT406', 'BMGT407', 'BMGT408C', 'BMGT408E', 'BMGT411', 'BMGT422', 'BMGT424', 'BMGT428J', 'BMGT430', 'BMGT431', 'BMGT434', 'BMGT435', 'BMGT438A', 'BMGT440', 'BMGT441', 'BMGT443', 'BMGT444', 'BMGT445', 'BMGT445F', 'BMGT446', 'BMGT448L', 'BMGT449F', 'BMGT450', 'BMGT451', 'BMGT452', 'BMGT454', 'BMGT457', 'BMGT458A', 'BMGT458B', 'BMGT458Q', 'BMGT458R', 'BMGT461', 'BMGT461M', 'BMGT461N', 'BMGT463', 'BMGT466', 'BMGT466F', 'BMGT467', 'BMGT468V', 'BMGT468Y', 'BMGT468Z', 'BMGT471F', 'BMGT472', 'BMGT475', 'BMGT476', 'BMGT477', 'BMGT484', 'BMGT485', 'BMGT490H', 'BMGT491', 'BMGT495', 'BMGT498L', 'BMGT808R', 'BMGT818M', 'BMGT828', 'BMGT831', 'BMGT838R', 'BMGT848F', 'BMGT858R', 'BMGT868C', 'BMGT868P', 'BMGT868R', 'BMGT878C', 'BMGT878P', 'BMGT878R', 'BMGT888W', 'BMGT898', 'BMGT899', 'BSCI126', 'BSCI135', 'BSCI160', 'BSCI161', 'BSCI161C', 'BSCI161S', 'BSCI170', 'BSCI171', 'BSCI189I', 'BSCI201', 'BSCI202', 'BSCI207', 'BSCI222', 'BSCI223', 'BSCI238C', 'BSCI279', 'BSCI279P', 'BSCI279Q', 'BSCI279R', 'BSCI279T', 'BSCI283', 'BSCI289', 'BSCI300', 'BSCI329', 'BSCI330', 'BSCI330H', 'BSCI338B', 'BSCI338G', 'BSCI338Z', 'BSCI339D', 'BSCI339I', 'BSCI339W', 'BSCI348', 'BSCI348A', 'BSCI348I', 'BSCI348R', 'BSCI353', 'BSCI360', 'BSCI361', 'BSCI363', 'BSCI370', 'BSCI374', 'BSCI374H', 'BSCI378H', 'BSCI379G', 'BSCI379H', 'BSCI379L', 'BSCI389', 'BSCI389H', 'BSCI389L', 'BSCI398H', 'BSCI399', 'BSCI399H', 'BSCI399L', 'BSCI404', 'BSCI405', 'BSCI410', 'BSCI411', 'BSCI411H', 'BSCI414', 'BSCI415', 'BSCI420', 'BSCI424', 'BSCI430', 'BSCI432', 'BSCI433', 'BSCI437', 'BSCI440', 'BSCI441', 'BSCI443', 'BSCI447', 'BSCI452', 'BSCI454', 'BSCI464', 'BSCI467', 'BSCI471', 'BSCI475', 'BSCI481', 'BSCI483', 'BSCI494', 'BSCV181', 'BSCV191', 'BSCV301', 'BSCV309', 'BSGC100', 'BSGC101', 'BSGC399', 'BSOS201', 'BSOS355', 'BSOS388B', 'BSST240', 'BSST241', 'BSST288R', 'BSST327', 'BSST330', 'BSST334', 'BSST335', 'BSST338C', 'BSST340', 'BSST386', 'BSST399G', 'BSST399T', 'BSST630', 'BSST634', 'BSST635', 'BUAC707', 'BUAC710', 'BUAC712', 'BUAC721', 'BUAC732', 'BUAC752', 'BUAC756', 'BUAC758A', 'BUAC758C', 'BUAC758D', 'BUAC758E', 'BUAC758H', 'BUAC758Q', 'BUAC758S', 'BUAC758U', 'BUAC759', 'BUAC762', 'BUAC764', 'BUAC766', 'BUAC770', 'BUDT758A', 'BUDT758B', 'BUDT758D', 'BUDT758E', 'BUDT758G', 'BUDT758I', 'BUDT758J', 'BUDT758L', 'BUDT758M', 'BUDT758P', 'BUDT758Q', 'BUDT758W', 'BUDT758X', 'BUDT758Y', 'BUDT759', 'BUFN610', 'BUFN620', 'BUFN640', 'BUFN650', 'BUFN712', 'BUFN721', 'BUFN730', 'BUFN734', 'BUFN741', 'BUFN742', 'BUFN744', 'BUFN746', 'BUFN758A', 'BUFN759', 'BULM700', 'BULM701', 'BULM710', 'BULM711', 'BULM721', 'BULM732', 'BULM742', 'BULM750', 'BULM751', 'BULM756', 'BULM759', 'BUMK720', 'BUMK724', 'BUMK726', 'BUMK742', 'BUMK759', 'BUMK760', 'BUMK762', 'BUMK766', 'BUMK773', 'BUSI600', 'BUSI610', 'BUSI630', 'BUSI631', 'BUSI634', 'BUSI662', 'BUSI683', 'BUSI690', 'BUSI711', 'BUSI712', 'BUSI713', 'BUSI718O', 'BUSI731', 'BUSI734', 'BUSI735', 'BUSI736', 'BUSI737', 'BUSI740', 'BUSI745', 'BUSI751', 'BUSI758F', 'BUSI758Q', 'BUSI759', 'BUSI785', 'BUSI787', 'BUSI799', 'BUSM600', 'BUSM602', 'BUSM604', 'BUSM606', 'BUSM610', 'BUSM612', 'BUSM616', 'BUSM621', 'BUSM706', 'BUSM710', 'BUSM715', 'BUSM741', 'BUSM754', 'BUSM758B', 'BUSM758N', 'BUSM798C', 'BUSO600', 'BUSO601', 'BUSO602', 'BUSO614', 'BUSO700', 'BUSO701', 'BUSO706', 'BUSO712', 'BUSO731', 'BUSO741', 'BUSO751', 'BUSO758A', 'BUSO758G', 'BUSO758J', 'BUSO782', 'CBMG688A', 'CBMG688C', 'CBMG688D', 'CBMG688J', 'CBMG688K', 'CBMG688M', 'CBMG688N', 'CBMG688P', 'CBMG688Y', 'CBMG699', 'CBMG699B', 'CBMG699D', 'CBMG699K', 'CBMG699X', 'CBMG699Y', 'CBMG699Z', 'CBMG799', 'CBMG898', 'CBMG899', 'CCJS100', 'CCJS105', 'CCJS200', 'CCJS225', 'CCJS230', 'CCJS234', 'CCJS300', 'CCJS310', 'CCJS320', 'CCJS325', 'CCJS340', 'CCJS342', 'CCJS345', 'CCJS359', 'CCJS360', 'CCJS370', 'CCJS386', 'CCJS388H', 'CCJS389H', 'CCJS398', 'CCJS399', 'CCJS418C', 'CCJS418D', 'CCJS418M', 'CCJS418P', 'CCJS450', 'CCJS451', 'CCJS453', 'CCJS454', 'CCJS498E', 'CCJS498G', 'CCJS498I', 'CCJS498K', 'CCJS498P', 'CCJS498X', 'CCJS600', 'CCJS601', 'CCJS604', 'CCJS620', 'CCJS650', 'CCJS653', 'CCJS654', 'CCJS699', 'CCJS710', 'CCJS720', 'CCJS799', 'CCJS898', 'CCJS899', 'CHBE100', 'CHBE250', 'CHBE301', 'CHBE333', 'CHBE369', 'CHBE410', 'CHBE422', 'CHBE437', 'CHBE440', 'CHBE442', 'CHBE444', 'CHBE468', 'CHBE469', 'CHBE470', 'CHBE472', 'CHBE473', 'CHBE481', 'CHBE486', 'CHEM131', 'CHEM131S', 'CHEM132', 'CHEM132C', 'CHEM132S', 'CHEM134', 'CHEM135', 'CHEM136', 'CHEM146', 'CHEM177', 'CHEM231', 'CHEM232', 'CHEM241', 'CHEM242', 'CHEM247', 'CHEM271', 'CHEM272', 'CHEM277', 'CHEM398', 'CHEM399A', 'CHEM399B', 'CHEM399C', 'CHEM399X', 'CHEM403', 'CHEM425', 'CHEM441', 'CHEM460', 'CHEM481', 'CHEM482', 'CHEM483', 'CHEM484', 'CHEM601', 'CHEM608K', 'CHEM611', 'CHEM624', 'CHEM641', 'CHEM684', 'CHEM689B', 'CHEM690', 'CHEM699', 'CHEM799', 'CHEM889A', 'CHEM889C', 'CHEM889D', 'CHEM889E', 'CHEM889F', 'CHEM889M', 'CHEM898', 'CHEM899', 'CHIN101', 'CHIN201', 'CHIN202', 'CHIN301', 'CHIN307', 'CHIN315', 'CHIN331', 'CHIN401', 'CHIN411', 'CHIN418B', 'CHIN441', 'CHIN499', 'CHPH618', 'CHPH709A', 'CHPH709B', 'CHPH709L', 'CHPH718I', 'CHPH799', 'CHPH898', 'CHPH899', 'CLAS170', 'CLAS275', 'CLAS305', 'CLAS309M', 'CLAS499', 'CLFS608', 'CLFS608A', 'CLFS609A', 'CLFS609K', 'CLFS620', 'CMLT235', 'CMLT270', 'CMLT275', 'CMLT277', 'CMLT280', 'CMLT386', 'CMLT398L', 'CMLT398M', 'CMLT398N', 'CMLT679E', 'CMLT679T', 'CMLT699', 'CMLT799', 'CMLT898', 'CMLT899', 'CMSC106', 'CMSC122', 'CMSC131', 'CMSC132', 'CMSC216', 'CMSC250', 'CMSC298A', 'CMSC320', 'CMSC330', 'CMSC351', 'CMSC388D', 'CMSC388J', 'CMSC389A', 'CMSC389B', 'CMSC389E', 'CMSC389N', 'CMSC389O', 'CMSC389P', 'CMSC389V', 'CMSC389W', 'CMSC396H', 'CMSC411', 'CMSC412', 'CMSC414', 'CMSC417', 'CMSC420', 'CMSC421', 'CMSC422', 'CMSC423', 'CMSC424', 'CMSC425', 'CMSC426', 'CMSC427', 'CMSC430', 'CMSC433', 'CMSC434', 'CMSC435', 'CMSC436', 'CMSC451', 'CMSC456', 'CMSC460', 'CMSC466', 'CMSC475', 'CMSC498A', 'CMSC498P', 'CMSC498X', 'CMSC499A', 'CMSC624', 'CMSC634', 'CMSC657', 'CMSC660', 'CMSC663', 'CMSC666', 'CMSC727', 'CMSC798', 'CMSC798E', 'CMSC799', 'CMSC818B', 'CMSC818D', 'CMSC818E', 'CMSC818G', 'CMSC818W', 'CMSC818X', 'CMSC828C', 'CMSC828I', 'CMSC828J', 'CMSC828P', 'CMSC828U', 'CMSC828V', 'CMSC828W', 'CMSC838J', 'CMSC838X', 'CMSC858D', 'CMSC898', 'CMSC899', 'COMM107', 'COMM107B', 'COMM107C', 'COMM107D', 'COMM130', 'COMM200', 'COMM201', 'COMM230', 'COMM250', 'COMM288', 'COMM324', 'COMM330', 'COMM331', 'COMM332', 'COMM351', 'COMM353', 'COMM360', 'COMM370', 'COMM371', 'COMM372', 'COMM373', 'COMM375', 'COMM382', 'COMM386', 'COMM388', 'COMM398C', 'COMM398E', 'COMM398G', 'COMM398K', 'COMM398L', 'COMM398M', 'COMM398N', 'COMM398Q', 'COMM399', 'COMM400', 'COMM401', 'COMM402', 'COMM420', 'COMM422', 'COMM425', 'COMM426', 'COMM435', 'COMM436', 'COMM460', 'COMM468A', 'COMM468M', 'COMM468T', 'COMM469G', 'COMM470', 'COMM475', 'COMM476', 'COMM478', 'COMM483', 'COMM488I', 'COMM489', 'COMM498M', 'COMM498X', 'COMM604', 'COMM618', 'COMM631', 'COMM638', 'COMM686', 'COMM688', 'COMM698', 'COMM698A', 'COMM700', 'COMM711', 'COMM715', 'COMM738M', 'COMM798', 'COMM799', 'COMM888', 'COMM889', 'COMM898', 'COMM899', 'CPBE100', 'CPBE225', 'CPET100', 'CPET200', 'CPGH100', 'CPGH200', 'CPJT100', 'CPJT200', 'CPMS100', 'CPMS225', 'CPMS230', 'CPPL100', 'CPPL200', 'CPSA100', 'CPSA149', 'CPSA200', 'CPSD100', 'CPSD101', 'CPSD200', 'CPSF100', 'CPSG100', 'CPSG200', 'CPSN100', 'CPSN230', 'CPSP218L', 'CPSP239A', 'CPSP239P', 'CPSP249L', 'CPSP249P', 'CPSP339P', 'CPSP349T', 'CPSP359N', 'CPSS100', 'CPSS220', 'CPSS225', 'CPSS240', 'DANC109', 'DANC119', 'DANC128', 'DANC138C', 'DANC138P', 'DANC138Z', 'DANC148', 'DANC149', 'DANC179', 'DANC199', 'DANC200', 'DANC200S', 'DANC218', 'DANC219', 'DANC228', 'DANC229', 'DANC299', 'DANC304', 'DANC309', 'DANC318', 'DANC319', 'DANC328', 'DANC329', 'DANC398', 'DANC399', 'DANC448', 'DANC449', 'DANC468', 'DANC488', 'DANC489M', 'DANC499', 'DANC600', 'DANC608', 'DANC610', 'DANC679', 'DANC689M', 'DANC689P', 'DANC689T', 'DANC689W', 'DANC698', 'DANC719', 'DANC777', 'DANC788', 'DANC799', 'DATA612', 'EALL300', 'ECON111', 'ECON175', 'ECON181', 'ECON200', 'ECON201', 'ECON230', 'ECON305', 'ECON306', 'ECON311', 'ECON312', 'ECON315', 'ECON317', 'ECON321', 'ECON325', 'ECON326', 'ECON330', 'ECON386', 'ECON387', 'ECON396', 'ECON398D', 'ECON399', 'ECON401', 'ECON402', 'ECON406', 'ECON410', 'ECON412', 'ECON414', 'ECON416', 'ECON422', 'ECON423', 'ECON424', 'ECON426', 'ECON451', 'ECON453', 'ECON456', 'ECON471', 'ECON485', 'ECON490', 'ECON499', 'ECON601', 'ECON603', 'ECON616', 'ECON623', 'ECON626', 'ECON630', 'ECON635', 'ECON637', 'ECON641', 'ECON642', 'ECON643', 'ECON645', 'ECON664', 'ECON670', 'ECON673', 'ECON675', 'ECON683', 'ECON698', 'ECON701', 'ECON703', 'ECON708', 'ECON709', 'ECON721', 'ECON741', 'ECON742', 'ECON747', 'ECON754', 'ECON771', 'ECON785', 'ECON799', 'ECON808', 'ECON828', 'ECON848', 'ECON868', 'ECON878', 'ECON898', 'ECON899', 'EDCP108C', 'EDCP108I', 'EDCP210', 'EDCP386', 'EDCP489', 'EDCP498', 'EDCP610', 'EDCP614', 'EDCP615', 'EDCP616', 'EDCP617', 'EDCP619B', 'EDCP622', 'EDCP632', 'EDCP635', 'EDCP640', 'EDCP641', 'EDCP652', 'EDCP682', 'EDCP685', 'EDCP695', 'EDCP697', 'EDCP698', 'EDCP738', 'EDCP741', 'EDCP743', 'EDCP746', 'EDCP772', 'EDCP775', 'EDCP789R', 'EDCP798', 'EDCP798A', 'EDCP799', 'EDCP799A', 'EDCP870', 'EDCP888', 'EDCP888A', 'EDCP888C', 'EDCP888G', 'EDCP889', 'EDCP898', 'EDCP899', 'EDHD200', 'EDHD201', 'EDHD210', 'EDHD220', 'EDHD221', 'EDHD228', 'EDHD230', 'EDHD231', 'EDHD306', 'EDHD314', 'EDHD319', 'EDHD320', 'EDHD322', 'EDHD323', 'EDHD386', 'EDHD411', 'EDHD412', 'EDHD413', 'EDHD414', 'EDHD420', 'EDHD425', 'EDHD426', 'EDHD441', 'EDHD442', 'EDHD443', 'EDHD444', 'EDHD460', 'EDHD489', 'EDHD498', 'EDHD629', 'EDHD690', 'EDHD711', 'EDHD718', 'EDHD720', 'EDHD721', 'EDHD789', 'EDHD798', 'EDHD799', 'EDHD888', 'EDHD889', 'EDHD898', 'EDHD899', 'EDHI338B', 'EDHI338I', 'EDHI338L', 'EDHI489', 'EDHI498', 'EDHI606', 'EDHI650', 'EDHI652', 'EDHI665', 'EDHI672', 'EDHI679', 'EDHI680', 'EDHI689', 'EDHI788Y', 'EDHI789', 'EDHI798', 'EDHI799', 'EDHI888', 'EDHI889', 'EDHI895', 'EDHI898', 'EDHI899', 'EDMS451', 'EDMS623', 'EDMS645', 'EDMS646', 'EDMS651', 'EDMS655', 'EDMS657', 'EDMS769M', 'EDMS779', 'EDMS798', 'EDMS799', 'EDMS889', 'EDMS898', 'EDMS899', 'EDSP210', 'EDSP211', 'EDSP220', 'EDSP289I', 'EDSP321', 'EDSP376', 'EDSP400', 'EDSP401', 'EDSP404', 'EDSP411', 'EDSP413', 'EDSP417', 'EDSP420', 'EDSP425', 'EDSP443', 'EDSP451', 'EDSP452', 'EDSP470', 'EDSP484', 'EDSP487', 'EDSP498', 'EDSP498B', 'EDSP499', 'EDSP600', 'EDSP602', 'EDSP604', 'EDSP613', 'EDSP615', 'EDSP625', 'EDSP652', 'EDSP684', 'EDSP687', 'EDSP692', 'EDSP798', 'EDSP799', 'EDSP860', 'EDSP875', 'EDSP888', 'EDSP888A', 'EDSP889', 'EDSP898', 'EDSP899', 'EDUC388', 'EDUC388E', 'EDUC388T', 'EDUC388U', 'EDUC498', 'ENAE100', 'ENAE202', 'ENAE283', 'ENAE283H', 'ENAE301', 'ENAE311', 'ENAE311H', 'ENAE362', 'ENAE380', 'ENAE398H', 'ENAE403', 'ENAE423', 'ENAE423H', 'ENAE441', 'ENAE455', 'ENAE457', 'ENAE481', 'ENAE483', 'ENAE499', 'ENAE601', 'ENAE603', 'ENAE631', 'ENAE636', 'ENAE641', 'ENAE647', 'ENAE651', 'ENAE653', 'ENAE655', 'ENAE675', 'ENAE684', 'ENAE788K', 'ENAE788X', 'ENAE799', 'ENAE898', 'ENAE899', 'ENCE100', 'ENCE200', 'ENCE201', 'ENCE215', 'ENCE300', 'ENCE302', 'ENCE305', 'ENCE310', 'ENCE320', 'ENCE325', 'ENCE340', 'ENCE353', 'ENCE360', 'ENCE370', 'ENCE411', 'ENCE420', 'ENCE422', 'ENCE423', 'ENCE424', 'ENCE426', 'ENCE430', 'ENCE432', 'ENCE433', 'ENCE441', 'ENCE444', 'ENCE454', 'ENCE466', 'ENCE470', 'ENCE489', 'ENCE489E', 'ENCE602', 'ENCE606', 'ENCE610', 'ENCE613', 'ENCE620', 'ENCE622', 'ENCE627', 'ENCE630', 'ENCE632', 'ENCE633', 'ENCE650', 'ENCE651', 'ENCE652', 'ENCE661', 'ENCE662', 'ENCE664', 'ENCE665', 'ENCE666', 'ENCE670', 'ENCE672', 'ENCE681', 'ENCE688I', 'ENCE688T', 'ENCE689', 'ENCE689E', 'ENCE689R', 'ENCE743', 'ENCE799', 'ENCE898', 'ENCE899', 'ENCH608', 'ENCH609', 'ENCH610', 'ENCH620', 'ENCH648', 'ENCH648C', 'ENCH648E', 'ENCH648F', 'ENCH648K', 'ENCH648W', 'ENCH799', 'ENCH898', 'ENCH899', 'ENCO099', 'ENEE101', 'ENEE140', 'ENEE150', 'ENEE200', 'ENEE205', 'ENEE222', 'ENEE244', 'ENEE245', 'ENEE303', 'ENEE303H', 'ENEE307', 'ENEE313', 'ENEE322', 'ENEE322H', 'ENEE324', 'ENEE350', 'ENEE350H', 'ENEE380', 'ENEE380H', 'ENEE381', 'ENEE407', 'ENEE408A', 'ENEE408C', 'ENEE408E', 'ENEE408I', 'ENEE408K', 'ENEE411', 'ENEE416', 'ENEE420', 'ENEE425', 'ENEE428', 'ENEE436', 'ENEE440', 'ENEE445', 'ENEE446', 'ENEE456', 'ENEE457', 'ENEE459A', 'ENEE459B', 'ENEE460', 'ENEE474', 'ENEE476', 'ENEE486', 'ENEE488', 'ENEE489I', 'ENEE490', 'ENEE498M', 'ENEE499', 'ENEE600', 'ENEE605', 'ENEE610', 'ENEE620', 'ENEE623', 'ENEE630', 'ENEE633', 'ENEE641', 'ENEE646', 'ENEE648D', 'ENEE660', 'ENEE662', 'ENEE680', 'ENEE690', 'ENEE698E', 'ENEE698Q', 'ENEE699', 'ENEE704', 'ENEE762', 'ENEE789O', 'ENEE791', 'ENEE799', 'ENEE898', 'ENEE899', 'ENES100', 'ENES102', 'ENES102H', 'ENES113', 'ENES115', 'ENES140', 'ENES150', 'ENES181', 'ENES190H', 'ENES210', 'ENES213', 'ENES215', 'ENES220', 'ENES221', 'ENES232', 'ENES304', 'ENES317', 'ENES390H', 'ENES397', 'ENES424', 'ENES440', 'ENES460', 'ENES461', 'ENES463', 'ENES467', 'ENES472', 'ENES480', 'ENES489A', 'ENES490H', 'ENES491', 'ENES602', 'ENES604', 'ENES662', 'ENES663', 'ENES666', 'ENES667', 'ENES672', 'ENFP101', 'ENFP250', 'ENFP300', 'ENFP405', 'ENFP410', 'ENFP415', 'ENFP425', 'ENFP429', 'ENFP440', 'ENFP464', 'ENFP489', 'ENFP601', 'ENFP611', 'ENFP619', 'ENFP621', 'ENFP625', 'ENFP626', 'ENFP627', 'ENFP629', 'ENFP649', 'ENFP651', 'ENFP653', 'ENFP662', 'ENFP664', 'ENFP671', 'ENFP799', 'ENGL101', 'ENGL101A', 'ENGL101C', 'ENGL101H', 'ENGL101S', 'ENGL101X', 'ENGL120', 'ENGL130', 'ENGL140', 'ENGL143', 'ENGL201', 'ENGL222', 'ENGL233', 'ENGL234', 'ENGL235', 'ENGL243', 'ENGL245', 'ENGL250', 'ENGL255', 'ENGL256', 'ENGL257', 'ENGL262', 'ENGL265', 'ENGL271', 'ENGL272', 'ENGL273', 'ENGL275', 'ENGL280', 'ENGL282', 'ENGL289C', 'ENGL290', 'ENGL291', 'ENGL293', 'ENGL296', 'ENGL297', 'ENGL301', 'ENGL310', 'ENGL312', 'ENGL313', 'ENGL317', 'ENGL329C', 'ENGL329L', 'ENGL329P', 'ENGL346', 'ENGL352', 'ENGL353', 'ENGL360', 'ENGL368B', 'ENGL368D', 'ENGL368J', 'ENGL373', 'ENGL376', 'ENGL378L', 'ENGL378M', 'ENGL378Z', 'ENGL379V', 'ENGL381', 'ENGL385', 'ENGL388D', 'ENGL388P', 'ENGL388T', 'ENGL388V', 'ENGL388W', 'ENGL390', 'ENGL390H', 'ENGL391', 'ENGL391H', 'ENGL392', 'ENGL393', 'ENGL393H', 'ENGL393Q', 'ENGL393X', 'ENGL394', 'ENGL395', 'ENGL398A', 'ENGL398B', 'ENGL398C', 'ENGL398E', 'ENGL398L', 'ENGL398N', 'ENGL398R', 'ENGL398V', 'ENGL410', 'ENGL425', 'ENGL428M', 'ENGL429', 'ENGL437', 'ENGL439A', 'ENGL439D', 'ENGL439K', 'ENGL454', 'ENGL460', 'ENGL466', 'ENGL469E', 'ENGL470', 'ENGL478A', 'ENGL479B', 'ENGL479E', 'ENGL479J', 'ENGL479Y', 'ENGL487', 'ENGL488G', 'ENGL489N', 'ENGL492', 'ENGL493', 'ENGL494', 'ENGL495', 'ENGL497', 'ENGL498', 'ENGL499', 'ENGL601', 'ENGL611', 'ENGL619A', 'ENGL628G', 'ENGL679', 'ENGL688', 'ENGL689', 'ENGL699', 'ENGL702', 'ENGL719J', 'ENGL729C', 'ENGL738B', 'ENGL748A', 'ENGL798B', 'ENGL798D', 'ENGL799', 'ENGL809', 'ENGL878', 'ENGL879', 'ENGL898', 'ENGL899', 'ENMA150', 'ENMA180', 'ENMA300', 'ENMA312', 'ENMA362', 'ENMA400', 'ENMA422', 'ENMA441', 'ENMA460', 'ENMA464', 'ENMA466', 'ENMA471', 'ENMA486', 'ENMA487', 'ENMA489L', 'ENMA495', 'ENMA499', 'ENMA600', 'ENMA613', 'ENMA641', 'ENMA650', 'ENMA660', 'ENMA664', 'ENMA680', 'ENMA683', 'ENMA688', 'ENMA698', 'ENMA797', 'ENMA799', 'ENMA898', 'ENMA899', 'ENME201', 'ENME202', 'ENME208', 'ENME272', 'ENME331', 'ENME332', 'ENME350', 'ENME351', 'ENME361', 'ENME371', 'ENME382', 'ENME392', 'ENME400', 'ENME408', 'ENME416', 'ENME423', 'ENME426', 'ENME430', 'ENME432', 'ENME440', 'ENME441', 'ENME442', 'ENME444', 'ENME454', 'ENME462', 'ENME467', 'ENME470', 'ENME472', 'ENME473', 'ENME486', 'ENME488', 'ENME489', 'ENME489A', 'ENME489F', 'ENME489G', 'ENME489J', 'ENME489U', 'ENME489V', 'ENME489X', 'ENME605', 'ENME610', 'ENME631', 'ENME640', 'ENME662', 'ENME670', 'ENME690', 'ENME701', 'ENME737', 'ENME741', 'ENME743', 'ENME744', 'ENME745', 'ENME780', 'ENME799', 'ENME808', 'ENME808T', 'ENME808U', 'ENME809B', 'ENME809C', 'ENME898', 'ENME899', 'ENPM600', 'ENPM610', 'ENPM611', 'ENPM613', 'ENPM616', 'ENPM617', 'ENPM620', 'ENPM622', 'ENPM631', 'ENPM640', 'ENPM645', 'ENPM651', 'ENPM660', 'ENPM662', 'ENPM667', 'ENPM672', 'ENPM677', 'ENPM687', 'ENPM691', 'ENPM694', 'ENPM696', 'ENPM808', 'ENPM808A', 'ENPM808J', 'ENPM808O', 'ENPM808P', 'ENPM808Q', 'ENPM808W', 'ENPM809A', 'ENPM809F', 'ENPM809J', 'ENPM809M', 'ENPM809N', 'ENPM809Y', 'ENRE489', 'ENRE600', 'ENRE602', 'ENRE641', 'ENRE648', 'ENRE648C', 'ENRE648J', 'ENRE670', 'ENRE684', 'ENRE689E', 'ENRE799', 'ENRE898', 'ENRE899', 'ENSE621', 'ENSE623', 'ENSE626', 'ENSE699', 'ENSE799', 'ENSP101', 'ENSP305', 'ENSP330', 'ENSP340', 'ENSP386', 'ENSP399', 'ENSP399R', 'ENSP400', 'ENSP499', 'ENST200', 'ENST233', 'ENST281', 'ENST282', 'ENST301', 'ENST302', 'ENST303', 'ENST333', 'ENST360', 'ENST388', 'ENST389', 'ENST403', 'ENST411', 'ENST414', 'ENST415', 'ENST417', 'ENST432', 'ENST441', 'ENST450', 'ENST456', 'ENST460', 'ENST472', 'ENST485', 'ENST486', 'ENST487', 'ENST489', 'ENST499', 'ENST499L', 'ENST499X', 'ENST499Y', 'ENST602', 'ENST603', 'ENST611', 'ENST650', 'ENST689', 'ENST689C', 'ENST689E', 'ENST689O', 'ENST689X', 'ENST689Y', 'ENST689Z', 'ENST798', 'ENST799', 'ENST898', 'ENST899', 'ENTM699K', 'ENTM701', 'ENTM710', 'ENTM745', 'ENTM756', 'ENTM788C', 'ENTM798V', 'ENTM799', 'ENTM898', 'ENTM899', 'ENTS622', 'ENTS625', 'ENTS630', 'ENTS632', 'ENTS635', 'ENTS640', 'ENTS641', 'ENTS653', 'ENTS657', 'ENTS669B', 'ENTS669C', 'ENTS669E', 'ENTS669I', 'ENTS689A', 'ENTS689F', 'ENTS699B', 'ENTS749B', 'ENTS749D', 'ENTS759D', 'ENTS759F', 'EPIB300', 'EPIB301', 'EPIB315', 'EPIB399', 'EPIB612', 'EPIB630', 'EPIB633', 'EPIB651', 'EPIB652', 'EPIB655', 'EPIB697', 'EPIB778', 'EPIB786', 'EPIB788', 'EPIB798', 'EPIB799', 'EPIB898', 'EPIB899', 'FGSM310', 'FGSM320', 'FGSM330', 'FGSM340', 'FGSM350', 'FGSM360', 'FGSM370', 'FGSM380', 'FGSM390', 'FILM245', 'FILM298B', 'FILM298D', 'FILM301', 'FILM319K', 'FILM329E', 'FILM329G', 'FILM329R', 'FILM359B', 'FILM359P', 'FILM359X', 'FILM369N', 'FILM385', 'FILM388', 'FILM421', 'FILM429G', 'FILM469G', 'FILM499', 'FIRE120', 'FIRE298', 'FMSC110S', 'FMSC170', 'FMSC186', 'FMSC190', 'FMSC260', 'FMSC290', 'FMSC302', 'FMSC310', 'FMSC330', 'FMSC332', 'FMSC341', 'FMSC381', 'FMSC383', 'FMSC399', 'FMSC460', 'FMSC477', 'FMSC487', 'FMSC498', 'FMSC498H', 'FMSC498P', 'FMSC640', 'FMSC642', 'FMSC650', 'FMSC652', 'FMSC658', 'FMSC689', 'FMSC698', 'FMSC698A', 'FMSC699', 'FMSC745', 'FMSC750', 'FMSC789', 'FMSC799', 'FMSC879', 'FMSC898', 'FMSC899', 'FREN103', 'FREN203', 'FREN204', 'FREN250', 'FREN250H', 'FREN301', 'FREN302', 'FREN312', 'FREN351', 'FREN351H', 'FREN386', 'FREN387', 'FREN399', 'FREN421', 'FREN472', 'FREN495H', 'FREN498G', 'FREN699W', 'FREN699Z', 'FREN798', 'FREN799', 'FREN889', 'FREN898', 'FREN899', 'GEMS100', 'GEMS202', 'GEMS208A', 'GEMS208B', 'GEMS208C', 'GEMS208D', 'GEMS208J', 'GEMS208K', 'GEMS208M', 'GEMS208P', 'GEMS296', 'GEMS297', 'GEMS396', 'GEMS397', 'GEMS496', 'GEMS497', 'GEOG110', 'GEOG140', 'GEOG170', 'GEOG201', 'GEOG211', 'GEOG276', 'GEOG330', 'GEOG332', 'GEOG372', 'GEOG373', 'GEOG384', 'GEOG384H', 'GEOG385', 'GEOG385H', 'GEOG398', 'GEOG398H', 'GEOG431', 'GEOG432', 'GEOG442', 'GEOG475', 'GEOG498', 'GEOG498D', 'GEOG498G', 'GEOG608', 'GEOG642', 'GEOG650', 'GEOG652', 'GEOG653', 'GEOG654', 'GEOG661', 'GEOG662', 'GEOG672', 'GEOG686', 'GEOG732', 'GEOG788', 'GEOG788J', 'GEOG788P', 'GEOG788Z', 'GEOG789', 'GEOG790', 'GEOG797', 'GEOG798', 'GEOG799', 'GEOG898', 'GEOG899', 'GEOL100', 'GEOL110', 'GEOL120', 'GEOL123', 'GEOL124', 'GEOL200', 'GEOL212', 'GEOL331', 'GEOL342', 'GEOL351', 'GEOL375', 'GEOL393', 'GEOL394', 'GEOL423', 'GEOL444', 'GEOL445', 'GEOL446', 'GEOL447', 'GEOL451', 'GEOL452', 'GEOL453', 'GEOL460', 'GEOL488', 'GEOL499', 'GEOL636', 'GEOL647', 'GEOL651', 'GEOL652', 'GEOL670', 'GEOL682', 'GEOL688', 'GEOL789A', 'GEOL789E', 'GEOL789J', 'GEOL789K', 'GEOL789O', 'GEOL798', 'GEOL799', 'GEOL898', 'GEOL899', 'GERM103', 'GERM148Y', 'GERM203', 'GERM204', 'GERM301', 'GERM302', 'GERM322', 'GERM322H', 'GERM385', 'GERM386', 'GERM397H', 'GERM399E', 'GERM436', 'GERM439O', 'GERM499', 'GERM689B', 'GERM689J', 'GERM798', 'GERM799', 'GERM888', 'GERM898', 'GERM899', 'GREK101', 'GREK111', 'GREK201', 'GREK211', 'GREK398', 'GREK488B', 'GREK488K', 'GREK499', 'GREK606', 'GREK699', 'GREK799', 'GVPT170', 'GVPT200', 'GVPT201', 'GVPT205S', 'GVPT217', 'GVPT241', 'GVPT273', 'GVPT280', 'GVPT289J', 'GVPT289L', 'GVPT306', 'GVPT319J', 'GVPT319L', 'GVPT320', 'GVPT354', 'GVPT356', 'GVPT368B', 'GVPT368L', 'GVPT388', 'GVPT388E', 'GVPT388M', 'GVPT388W', 'GVPT390', 'GVPT392', 'GVPT396', 'GVPT397', 'GVPT406', 'GVPT409A', 'GVPT409E', 'GVPT409Q', 'GVPT409W', 'GVPT417', 'GVPT423H', 'GVPT429A', 'GVPT429C', 'GVPT431', 'GVPT439B', 'GVPT439C', 'GVPT445', 'GVPT449D', 'GVPT449P', 'GVPT456', 'GVPT457H', 'GVPT459B', 'GVPT459H', 'GVPT459R', 'GVPT459W', 'GVPT459Y', 'GVPT460', 'GVPT474', 'GVPT479D', 'GVPT479K', 'GVPT485', 'GVPT622', 'GVPT700', 'GVPT708A', 'GVPT729A', 'GVPT743', 'GVPT770', 'GVPT780', 'GVPT799', 'GVPT803', 'GVPT808B', 'GVPT828O', 'GVPT849', 'GVPT888I', 'GVPT898', 'GVPT899', 'HACS100', 'HACS200', 'HACS201', 'HACS208M', 'HACS208N', 'HACS208P', 'HACS279', 'HACS287', 'HACS297', 'HACS408L', 'HACS408O', 'HACS479', 'HACS498', 'HDCC105', 'HDCC201', 'HDCC208C', 'HDCC208N', 'HDCC208O', 'HDCC208U', 'HDCC208Y', 'HDCC379', 'HEBR106', 'HEBR206', 'HEBR249M', 'HEBR298B', 'HEBR313', 'HEBR386', 'HEBR499', 'HEIP240', 'HESI217', 'HESI220', 'HESI310', 'HESI315', 'HESI318D', 'HESI318M', 'HESI318N', 'HESI318T', 'HESI320', 'HESI417', 'HESI418D', 'HESI418F', 'HESI498', 'HESI671', 'HESI672', 'HESP120', 'HESP150', 'HESP202', 'HESP214', 'HESP300', 'HESP305', 'HESP311', 'HESP386', 'HESP388', 'HESP389', 'HESP400', 'HESP403', 'HESP411', 'HESP413', 'HESP415', 'HESP416', 'HESP422', 'HESP469', 'HESP469A', 'HESP469B', 'HESP498', 'HESP499', 'HESP499H', 'HESP600', 'HESP603', 'HESP606', 'HESP610', 'HESP613', 'HESP616', 'HESP624', 'HESP626', 'HESP630', 'HESP638', 'HESP639D', 'HESP645', 'HESP648A', 'HESP648B', 'HESP649A', 'HESP649B', 'HESP700', 'HESP702', 'HESP708', 'HESP710', 'HESP712', 'HESP722', 'HESP728', 'HESP729', 'HESP788', 'HESP799', 'HESP829', 'HESP849', 'HESP859', 'HESP889', 'HESP898', 'HESP899', 'HHUM105', 'HHUM205', 'HHUM328', 'HHUM329', 'HISP600', 'HISP611', 'HISP629', 'HISP650', 'HISP655', 'HISP660', 'HISP680', 'HISP701', 'HISP710', 'HISP711', 'HIST106', 'HIST110', 'HIST111', 'HIST113', 'HIST120', 'HIST123', 'HIST132', 'HIST132C', 'HIST133', 'HIST135', 'HIST135C', 'HIST136', 'HIST187', 'HIST200', 'HIST201', 'HIST204', 'HIST208D', 'HIST208E', 'HIST208F', 'HIST215', 'HIST219C', 'HIST219E', 'HIST219Z', 'HIST224', 'HIST234', 'HIST237', 'HIST240', 'HIST250', 'HIST254', 'HIST284', 'HIST289O', 'HIST299', 'HIST319J', 'HIST319L', 'HIST319Q', 'HIST319R', 'HIST319V', 'HIST319W', 'HIST326', 'HIST328A', 'HIST328L', 'HIST328R', 'HIST329B', 'HIST329E', 'HIST329G', 'HIST329X', 'HIST331', 'HIST333', 'HIST339A', 'HIST353', 'HIST355', 'HIST357', 'HIST361', 'HIST370', 'HIST375', 'HIST382', 'HIST386', 'HIST395', 'HIST398', 'HIST399', 'HIST405', 'HIST408B', 'HIST408E', 'HIST408W', 'HIST408Z', 'HIST415', 'HIST419Q', 'HIST428A', 'HIST428J', 'HIST428N', 'HIST429A', 'HIST429O', 'HIST429X', 'HIST450', 'HIST454', 'HIST466', 'HIST481', 'HIST482', 'HIST491', 'HIST499', 'HIST601', 'HIST607', 'HIST608A', 'HIST610', 'HIST619A', 'HIST619B', 'HIST619G', 'HIST619O', 'HIST619Y', 'HIST638C', 'HIST638J', 'HIST639X', 'HIST708', 'HIST709', 'HIST799', 'HIST811', 'HIST819A', 'HIST819B', 'HIST819M', 'HIST898', 'HIST899', 'HLSA300', 'HLSA465', 'HLSA484', 'HLSA601', 'HLSA611', 'HLSA688', 'HLSA689', 'HLSA702', 'HLSA709', 'HLSA711', 'HLSA720', 'HLSA725', 'HLSA745', 'HLSA750', 'HLSA765', 'HLSA770', 'HLSA772', 'HLSA775', 'HLSA778', 'HLSA780', 'HLSA785', 'HLSA786', 'HLSA790', 'HLSA798', 'HLSA799', 'HLSA898', 'HLSA899', 'HLSC100', 'HLSC207', 'HLSC374', 'HLTH124', 'HLTH140', 'HLTH140H', 'HLTH200', 'HLTH230', 'HLTH234', 'HLTH234H', 'HLTH264', 'HLTH264H', 'HLTH285', 'HLTH285H', 'HLTH289', 'HLTH292', 'HLTH302', 'HLTH302H', 'HLTH306', 'HLTH306H', 'HLTH325', 'HLTH325H', 'HLTH364', 'HLTH364H', 'HLTH366', 'HLTH371', 'HLTH371H', 'HLTH377', 'HLTH377H', 'HLTH386', 'HLTH389', 'HLTH391', 'HLTH391H', 'HLTH399', 'HLTH410', 'HLTH420', 'HLTH430', 'HLTH430H', 'HLTH434', 'HLTH434H', 'HLTH460', 'HLTH460H', 'HLTH489', 'HLTH490', 'HLTH491', 'HLTH492', 'HLTH498L', 'HLTH609', 'HLTH652', 'HLTH672', 'HLTH688', 'HLTH688L', 'HLTH710', 'HLTH712', 'HLTH776', 'HLTH778', 'HLTH780', 'HLTH786', 'HLTH799', 'HLTH898', 'HLTH899', 'HONR208P', 'HONR209G', 'HONR218B', 'HONR218L', 'HONR218M', 'HONR218T', 'HONR229Q', 'HONR238C', 'HONR238R', 'HONR248J', 'HONR248V', 'HONR249D', 'HONR258E', 'HONR258O', 'HONR259C', 'HONR259G', 'HONR268N', 'HONR269E', 'HONR269T', 'HONR269V', 'HONR278D', 'HONR278G', 'HONR278Z', 'HONR279M', 'HONR288O', 'HONR289A', 'HONR299A', 'HONR299F', 'HONR299G', 'HONR299H', 'HONR348J', 'HONR368A', 'HONR378A', 'HONR378B', 'HONR378C', 'HONR378D', 'HONR378E', 'HONR378G', 'HONR378J', 'HONR378K', 'HONR378M', 'IDEA101', 'IDEA258A', 'IDEA258C', 'IMMR200', 'IMMR219C', 'INAG099', 'INAG100', 'INAG102', 'INAG103', 'INAG106', 'INAG110', 'INAG110S', 'INAG123', 'INAG199', 'INAG199C', 'INAG199D', 'INAG201', 'INAG203', 'INAG226', 'INAG231', 'INAG237', 'INAG242', 'INAG250', 'INAG251', 'INAG253', 'INAG289', 'INFM600', 'INFM603', 'INFM620', 'INFM700', 'INFM719', 'INFM737', 'INFM757', 'INFM799', 'INST123', 'INST126', 'INST152', 'INST154', 'INST155', 'INST201', 'INST301', 'INST309', 'INST311', 'INST314', 'INST326', 'INST327', 'INST335', 'INST341', 'INST346', 'INST352', 'INST354', 'INST362', 'INST364', 'INST377', 'INST408A', 'INST408I', 'INST414', 'INST442', 'INST447', 'INST462', 'INST466', 'INST490', 'INST604', 'INST610', 'INST613', 'INST615', 'INST620', 'INST627', 'INST630', 'INST631', 'INST638', 'INST639A', 'INST639B', 'INST639C', 'INST639D', 'INST643', 'INST650', 'INST651', 'INST682', 'INST704', 'INST709', 'INST710', 'INST737', 'INST752', 'INST753', 'INST754', 'INST760', 'INST775', 'INST782', 'INST799', 'INST800', 'INST808', 'INST810', 'INST878A', 'INST878B', 'INST878C', 'INST878E', 'INST888', 'INST898', 'INST899', 'ISRL249N', 'ISRL289I', 'ISRL329B', 'ISRL329G', 'ISRL329N', 'ISRL343', 'ISRL448M', 'ITAL103', 'ITAL203', 'ITAL204', 'ITAL261', 'ITAL311', 'ITAL386', 'ITAL399', 'ITAL399T', 'ITAL411', 'ITAL478D', 'ITAL478M', 'ITAL499', 'ITAL499M', 'JAPN101', 'JAPN201', 'JAPN301', 'JAPN311', 'JAPN345', 'JAPN386', 'JAPN407', 'JAPN421', 'JAPN498A', 'JAPN499', 'JOUR130', 'JOUR150', 'JOUR152', 'JOUR175', 'JOUR181', 'JOUR199', 'JOUR200', 'JOUR201', 'JOUR202', 'JOUR262', 'JOUR289E', 'JOUR289F', 'JOUR289J', 'JOUR289P', 'JOUR320', 'JOUR325', 'JOUR327', 'JOUR328R', 'JOUR328V', 'JOUR352', 'JOUR353', 'JOUR355', 'JOUR357', 'JOUR360', 'JOUR361', 'JOUR362', 'JOUR364', 'JOUR367', 'JOUR368D', 'JOUR368F', 'JOUR368I', 'JOUR368K', 'JOUR368L', 'JOUR368N', 'JOUR368Y', 'JOUR370', 'JOUR371', 'JOUR382', 'JOUR389E', 'JOUR396', 'JOUR398', 'JOUR402', 'JOUR405', 'JOUR453', 'JOUR455', 'JOUR456', 'JOUR458B', 'JOUR458M', 'JOUR458V', 'JOUR459R', 'JOUR472', 'JOUR479E', 'JOUR479J', 'JOUR479O', 'JOUR479V', 'JOUR480', 'JOUR501', 'JOUR601', 'JOUR603', 'JOUR604', 'JOUR620', 'JOUR625', 'JOUR627', 'JOUR628B', 'JOUR628C', 'JOUR628I', 'JOUR628R', 'JOUR628V', 'JOUR652', 'JOUR655', 'JOUR660', 'JOUR662', 'JOUR664', 'JOUR667', 'JOUR668D', 'JOUR668I', 'JOUR668K', 'JOUR668L', 'JOUR670', 'JOUR689E', 'JOUR689F', 'JOUR698', 'JOUR698I', 'JOUR702', 'JOUR772', 'JOUR775', 'JOUR779V', 'JOUR798', 'JOUR799', 'JOUR800', 'JOUR888', 'JOUR889', 'JOUR898', 'JOUR899', 'JWST141', 'JWST187', 'JWST219G', 'JWST262', 'JWST281', 'JWST289A', 'JWST289E', 'JWST289J', 'JWST319L', 'JWST319N', 'JWST325', 'JWST344', 'JWST347', 'JWST370', 'JWST386', 'JWST408', 'JWST409', 'JWST418', 'JWST429B', 'JWST452', 'JWST459', 'JWST468', 'JWST469', 'JWST478', 'JWST492', 'JWST499', 'JWST609', 'JWST619', 'JWST648', 'JWST658', 'JWST678', 'JWST799', 'KNES100N', 'KNES100O', 'KNES131O', 'KNES131V', 'KNES134O', 'KNES137N', 'KNES137O', 'KNES140R', 'KNES140V', 'KNES144Q', 'KNES144R', 'KNES144T', 'KNES152N', 'KNES152O', 'KNES154N', 'KNES154O', 'KNES154W', 'KNES155N', 'KNES157N', 'KNES157O', 'KNES160N', 'KNES160O', 'KNES161F', 'KNES161T', 'KNES200', 'KNES201', 'KNES214', 'KNES222', 'KNES235', 'KNES260', 'KNES282', 'KNES287', 'KNES289', 'KNES289L', 'KNES289R', 'KNES289W', 'KNES293', 'KNES300', 'KNES300H', 'KNES305', 'KNES306', 'KNES320', 'KNES332', 'KNES332H', 'KNES333', 'KNES350', 'KNES350H', 'KNES360', 'KNES360H', 'KNES370', 'KNES370H', 'KNES385', 'KNES385H', 'KNES386', 'KNES389', 'KNES389E', 'KNES389I', 'KNES389K', 'KNES400', 'KNES400H', 'KNES440', 'KNES440H', 'KNES445', 'KNES451', 'KNES451H', 'KNES457', 'KNES464', 'KNES464H', 'KNES465', 'KNES465H', 'KNES476', 'KNES478', 'KNES483', 'KNES483H', 'KNES485', 'KNES497', 'KNES498', 'KNES600', 'KNES609', 'KNES618', 'KNES645', 'KNES660', 'KNES689', 'KNES689B', 'KNES689G', 'KNES691', 'KNES778', 'KNES786', 'KNES789', 'KNES789T', 'KNES799', 'KNES898', 'KNES899', 'KORA101', 'KORA201', 'KORA398C', 'KORA398E', 'KORA398Y', 'KORA499', 'LARC141', 'LARC151', 'LARC160', 'LARC265', 'LARC320', 'LARC340', 'LARC389', 'LARC420', 'LARC440', 'LARC452', 'LARC470', 'LARC489R', 'LARC499', 'LARC620', 'LARC640', 'LARC642', 'LARC670', 'LARC699', 'LARC721', 'LARC748', 'LARC799', 'LASC234', 'LASC234H', 'LASC248B', 'LASC250', 'LASC286', 'LASC348C', 'LASC448J', 'LASC448N', 'LASC448U', 'LASC458', 'LASC486', 'LATN101', 'LATN102', 'LATN388A', 'LATN472', 'LATN488J', 'LATN499', 'LATN672', 'LATN688J', 'LATN699', 'LATN799', 'LBSC602', 'LBSC631', 'LBSC644', 'LBSC645', 'LBSC671', 'LBSC702', 'LBSC707', 'LBSC709', 'LBSC723', 'LBSC724', 'LBSC731', 'LBSC742', 'LBSC749', 'LBSC751', 'LBSC770', 'LBSC791', 'LGBT200', 'LGBT265', 'LGBT350', 'LGBT386', 'LGBT448W', 'LGBT448Y', 'LGBT499', 'LING200', 'LING240', 'LING248', 'LING272', 'LING311', 'LING320', 'LING321', 'LING410', 'LING419E', 'LING440', 'LING448', 'LING449E', 'LING499', 'LING499C', 'LING499H', 'LING610', 'LING620', 'LING640', 'LING646', 'LING660', 'LING689', 'LING698', 'LING698T', 'LING798', 'LING799', 'LING819M', 'LING848A', 'LING879F', 'LING888', 'LING889', 'LING896', 'LING898', 'LING899', 'MATH003', 'MATH007', 'MATH013', 'MATH015', 'MATH107', 'MATH113', 'MATH115', 'MATH120', 'MATH121', 'MATH135', 'MATH136', 'MATH140', 'MATH140H', 'MATH141', 'MATH141H', 'MATH206', 'MATH212', 'MATH213', 'MATH214', 'MATH240', 'MATH241', 'MATH241H', 'MATH246', 'MATH246H', 'MATH274', 'MATH299B', 'MATH299C', 'MATH299M', 'MATH310', 'MATH314', 'MATH315', 'MATH340', 'MATH386', 'MATH401', 'MATH402', 'MATH403', 'MATH405', 'MATH406', 'MATH410', 'MATH411', 'MATH416', 'MATH424', 'MATH430', 'MATH431', 'MATH432', 'MATH436', 'MATH445', 'MATH452', 'MATH456', 'MATH461', 'MATH462', 'MATH463', 'MATH464', 'MATH475', 'MATH489', 'MATH498A', 'MATH600', 'MATH603', 'MATH606', 'MATH630', 'MATH632', 'MATH642', 'MATH670', 'MATH673', 'MATH689', 'MATH695', 'MATH712', 'MATH730', 'MATH742', 'MATH744', 'MATH799', 'MATH808A', 'MATH808F', 'MATH818A', 'MATH848A', 'MATH848S', 'MATH858A', 'MATH868A', 'MATH868C', 'MATH898', 'MATH899', 'MEES498I', 'MEES607', 'MEES608B', 'MEES608D', 'MEES608M', 'MEES608O', 'MEES637', 'MEES698B', 'MEES698E', 'MEES698I', 'MEES698K', 'MEES698M', 'MEES698R', 'MEES698X', 'MEES699', 'MEES799', 'MEES898', 'MEES899', 'MIEH300', 'MIEH309', 'MIEH321', 'MIEH400', 'MIEH600', 'MIEH605', 'MIEH609', 'MIEH688', 'MIEH730', 'MIEH735', 'MIEH740', 'MIEH778', 'MIEH783', 'MIEH786', 'MIEH788', 'MIEH789', 'MIEH799', 'MIEH898', 'MIEH899', 'MITH301', 'MITH388T', 'MITH729', 'MITH735', 'MLAW100', 'MLAW304', 'MLAW305', 'MLAW358B', 'MLAW358C', 'MLAW358F', 'MLAW358O', 'MLAW358T', 'MLAW358X', 'MLAW388', 'MLSC308', 'MOCB608', 'MOCB699', 'MOCB898', 'MOCB899', 'MSML612', 'MUED155', 'MUED186', 'MUED213', 'MUED320', 'MUED333', 'MUED420', 'MUED471', 'MUED474', 'MUED484', 'MUED494', 'MUED697', 'MUED698V', 'MUED729', 'MUED790', 'MUSC099', 'MUSC102', 'MUSC102B', 'MUSC106', 'MUSC123', 'MUSC127', 'MUSC128', 'MUSC129A', 'MUSC129B', 'MUSC129C', 'MUSC129G', 'MUSC129K', 'MUSC129L', 'MUSC129P', 'MUSC129Q', 'MUSC129U', 'MUSC140', 'MUSC150', 'MUSC202', 'MUSC204', 'MUSC205', 'MUSC210', 'MUSC215', 'MUSC220', 'MUSC227', 'MUSC228', 'MUSC229A', 'MUSC229D', 'MUSC229E', 'MUSC229F', 'MUSC229G', 'MUSC229I', 'MUSC229J', 'MUSC229K', 'MUSC229P', 'MUSC229R', 'MUSC229U', 'MUSC229Z', 'MUSC250', 'MUSC260', 'MUSC289I', 'MUSC328', 'MUSC329A', 'MUSC329B', 'MUSC329E', 'MUSC329M', 'MUSC329O', 'MUSC329W', 'MUSC361', 'MUSC379', 'MUSC386', 'MUSC400S', 'MUSC428', 'MUSC443', 'MUSC444', 'MUSC446', 'MUSC448', 'MUSC448A', 'MUSC448M', 'MUSC448P', 'MUSC448W', 'MUSC450', 'MUSC453', 'MUSC455', 'MUSC460', 'MUSC467', 'MUSC469C', 'MUSC469D', 'MUSC469F', 'MUSC469V', 'MUSC490', 'MUSC499', 'MUSC550', 'MUSC601', 'MUSC604', 'MUSC605', 'MUSC608', 'MUSC609', 'MUSC611', 'MUSC613', 'MUSC629A', 'MUSC629C', 'MUSC629F', 'MUSC629G', 'MUSC629H', 'MUSC629J', 'MUSC629K', 'MUSC629L', 'MUSC629O', 'MUSC629P', 'MUSC629Q', 'MUSC629R', 'MUSC629U', 'MUSC629W', 'MUSC629Z', 'MUSC643', 'MUSC646', 'MUSC648', 'MUSC649A', 'MUSC649B', 'MUSC649E', 'MUSC649M', 'MUSC649O', 'MUSC649W', 'MUSC653', 'MUSC655', 'MUSC659A', 'MUSC659B', 'MUSC659C', 'MUSC660', 'MUSC669C', 'MUSC669D', 'MUSC669F', 'MUSC669V', 'MUSC670', 'MUSC677', 'MUSC679N', 'MUSC689', 'MUSC699', 'MUSC699R', 'MUSC699T', 'MUSC699W', 'MUSC757', 'MUSC758', 'MUSC758A', 'MUSC758B', 'MUSC799', 'MUSC800S', 'MUSC800V', 'MUSC800W', 'MUSC811', 'MUSC813', 'MUSC830A', 'MUSC830P', 'MUSC830V', 'MUSC830W', 'MUSC832A', 'MUSC898', 'MUSC899', 'MUSP103T', 'MUSP419S', 'MUSP898', 'MUSP899', 'NACS608', 'NACS641', 'NACS643', 'NACS645', 'NACS728F', 'NACS728J', 'NACS728N', 'NACS798', 'NACS799', 'NACS898', 'NACS899', 'NAVY100', 'NAVY108', 'NAVY200', 'NAVY300', 'NAVY400', 'NEUR200', 'NEUR305', 'NEUR306', 'NFSC100', 'NFSC100H', 'NFSC112', 'NFSC220', 'NFSC230', 'NFSC350', 'NFSC380', 'NFSC386', 'NFSC388', 'NFSC399', 'NFSC421', 'NFSC422', 'NFSC423', 'NFSC440', 'NFSC455', 'NFSC490', 'NFSC498', 'NFSC498A', 'NFSC498F', 'NFSC498K', 'NFSC498P', 'NFSC498T', 'NFSC498V', 'NFSC620', 'NFSC678A', 'NFSC678F', 'NFSC678K', 'NFSC678R', 'NFSC678V', 'NFSC679P', 'NFSC679R', 'NFSC679T', 'NFSC688', 'NFSC690', 'NFSC699', 'NFSC735', 'NFSC799', 'NFSC898', 'NFSC899', 'NIAS788W', 'PEER311', 'PEER312', 'PEER314', 'PEER318', 'PEER319', 'PEER338', 'PERS101', 'PERS201', 'PERS211', 'PERS283', 'PERS298E', 'PERS299', 'PERS301', 'PERS311', 'PERS398C', 'PERS398G', 'PERS398Q', 'PERS398R', 'PERS399', 'PERS399C', 'PERS399D', 'PERS498N', 'PHIL100', 'PHIL140', 'PHIL170', 'PHIL171', 'PHIL201', 'PHIL202', 'PHIL203', 'PHIL205', 'PHIL220', 'PHIL245', 'PHIL271', 'PHIL308T', 'PHIL308W', 'PHIL308X', 'PHIL309B', 'PHIL310', 'PHIL318G', 'PHIL332', 'PHIL338D', 'PHIL338J', 'PHIL341', 'PHIL344', 'PHIL362', 'PHIL386', 'PHIL412', 'PHIL417', 'PHIL418F', 'PHIL418L', 'PHIL428B', 'PHIL428N', 'PHIL445', 'PHIL453', 'PHIL490', 'PHIL498F', 'PHIL498G', 'PHIL660', 'PHIL688T', 'PHIL788G', 'PHIL788I', 'PHIL799', 'PHIL808G', 'PHIL808K', 'PHIL848G', 'PHIL888', 'PHIL889', 'PHIL898', 'PHIL899', 'PHPE400', 'PHSC300', 'PHSC321', 'PHSC389', 'PHSC399', 'PHSC405', 'PHSC410', 'PHSC412', 'PHSC415', 'PHSC440', 'PHSC497', 'PHYS102', 'PHYS103', 'PHYS105', 'PHYS115', 'PHYS121', 'PHYS122', 'PHYS131', 'PHYS132', 'PHYS161', 'PHYS165', 'PHYS170', 'PHYS171', 'PHYS171H', 'PHYS199M', 'PHYS260', 'PHYS260H', 'PHYS261', 'PHYS270', 'PHYS271', 'PHYS272', 'PHYS272H', 'PHYS273', 'PHYS273H', 'PHYS274', 'PHYS275', 'PHYS276', 'PHYS299', 'PHYS371', 'PHYS373', 'PHYS375', 'PHYS386', 'PHYS389', 'PHYS398', 'PHYS399', 'PHYS399D', 'PHYS399E', 'PHYS401', 'PHYS402', 'PHYS404', 'PHYS405', 'PHYS407', 'PHYS410', 'PHYS411', 'PHYS420', 'PHYS431', 'PHYS444', 'PHYS475', 'PHYS485', 'PHYS499A', 'PHYS499B', 'PHYS499V', 'PHYS601', 'PHYS604', 'PHYS622', 'PHYS624', 'PHYS662', 'PHYS675', 'PHYS685', 'PHYS709', 'PHYS715', 'PHYS721', 'PHYS728', 'PHYS732', 'PHYS738', 'PHYS739', 'PHYS748', 'PHYS749', 'PHYS758E', 'PHYS759', 'PHYS761', 'PHYS769', 'PHYS778', 'PHYS798', 'PHYS798B', 'PHYS798D', 'PHYS798L', 'PHYS798T', 'PHYS799', 'PHYS838C', 'PHYS839A', 'PHYS898', 'PHYS899', 'PLCY100', 'PLCY101', 'PLCY201', 'PLCY203', 'PLCY213', 'PLCY214', 'PLCY300', 'PLCY301', 'PLCY302', 'PLCY304', 'PLCY306', 'PLCY309', 'PLCY310', 'PLCY311', 'PLCY313', 'PLCY386', 'PLCY388', 'PLCY388A', 'PLCY388D', 'PLCY388E', 'PLCY388G', 'PLCY388M', 'PLCY388Q', 'PLCY400', 'PLCY401', 'PLCY610', 'PLCY611', 'PLCY640', 'PLCY641', 'PLCY670', 'PLCY688E', 'PLCY688G', 'PLCY688I', 'PLCY688R', 'PLCY689A', 'PLCY689J', 'PLCY689Q', 'PLCY689Z', 'PLCY698A', 'PLCY698T', 'PLCY699B', 'PLCY699D', 'PLCY699V', 'PLCY699W', 'PLCY700', 'PLCY720', 'PLCY735', 'PLCY741', 'PLCY744', 'PLCY752', 'PLCY780', 'PLCY781', 'PLCY783', 'PLCY798A', 'PLCY798B', 'PLCY798M', 'PLCY798N', 'PLCY798Y', 'PLCY798Z', 'PLCY898', 'PLCY899', 'PLSC101', 'PLSC115', 'PLSC125', 'PLSC201', 'PLSC203', 'PLSC205', 'PLSC253', 'PLSC389', 'PLSC399', 'PLSC402', 'PLSC404', 'PLSC405', 'PLSC420', 'PLSC433', 'PLSC453', 'PLSC608', 'PLSC608T', 'PLSC619', 'PLSC799', 'PLSC898', 'PLSC899', 'PORT104', 'PORT205', 'PORT228D', 'PORT234', 'PORT386', 'PORT399', 'PORT699', 'PSYC100', 'PSYC123', 'PSYC200', 'PSYC202', 'PSYC221', 'PSYC289D', 'PSYC300', 'PSYC303', 'PSYC309N', 'PSYC318D', 'PSYC330', 'PSYC336', 'PSYC341', 'PSYC344', 'PSYC353', 'PSYC354', 'PSYC355', 'PSYC361', 'PSYC389', 'PSYC403', 'PSYC407', 'PSYC409', 'PSYC411', 'PSYC414', 'PSYC417', 'PSYC420', 'PSYC425', 'PSYC432', 'PSYC433', 'PSYC435', 'PSYC436', 'PSYC440', 'PSYC450', 'PSYC468H', 'PSYC469H', 'PSYC478', 'PSYC479', 'PSYC489Z', 'PSYC499H', 'PSYC601', 'PSYC603', 'PSYC614', 'PSYC622', 'PSYC623', 'PSYC629B', 'PSYC629C', 'PSYC629D', 'PSYC638', 'PSYC639', 'PSYC643', 'PSYC644', 'PSYC651', 'PSYC652', 'PSYC654', 'PSYC660', 'PSYC661', 'PSYC692', 'PSYC700', 'PSYC732', 'PSYC738P', 'PSYC798K', 'PSYC799', 'PSYC819D', 'PSYC888A', 'PSYC889', 'PSYC898', 'PSYC899', 'RDEV250', 'RDEV270', 'RDEV350', 'RDEV450', 'RDEV600', 'RDEV603', 'RDEV605', 'RDEV620', 'RDEV630', 'RDEV635', 'RDEV640', 'RDEV660', 'RDEV670', 'RDEV688D', 'RDEV689Y', 'RDEV690', 'RELS120', 'RELS170', 'RELS219E', 'RELS219Z', 'RELS289D', 'RELS289I', 'RELS289J', 'RELS341', 'RELS343', 'RELS419R', 'RELS429N', 'RELS499', 'RUSS101', 'RUSS201', 'RUSS289I', 'RUSS301', 'RUSS303', 'RUSS386', 'RUSS398F', 'RUSS401', 'RUSS439A', 'RUSS499', 'RUSS798', 'RUSS799', 'SLAA610', 'SLAA611', 'SLAA620', 'SLAA649R', 'SLAA650', 'SLAA719', 'SLAA749P', 'SLAA754', 'SLAA760', 'SLAA779', 'SLAA798', 'SLAA799', 'SLAA888', 'SLAA898', 'SLAA899', 'SLLC108N', 'SLLC108Q', 'SLLC108R', 'SLLC108V', 'SLLC208Q', 'SLLC208R', 'SLLC208V', 'SLLC286', 'SLLC299P', 'SLLC309', 'SLLC386', 'SLLC789', 'SMLP470', 'SMLP472', 'SOCY100', 'SOCY100H', 'SOCY105', 'SOCY201', 'SOCY202', 'SOCY203', 'SOCY227', 'SOCY230', 'SOCY236', 'SOCY241', 'SOCY242', 'SOCY325', 'SOCY335', 'SOCY380', 'SOCY381', 'SOCY383', 'SOCY386', 'SOCY398G', 'SOCY399', 'SOCY404', 'SOCY410', 'SOCY411', 'SOCY424', 'SOCY428', 'SOCY431', 'SOCY432', 'SOCY457', 'SOCY470', 'SOCY480', 'SOCY481', 'SOCY498O', 'SOCY601', 'SOCY616', 'SOCY620', 'SOCY627', 'SOCY633', 'SOCY634', 'SOCY653', 'SOCY699', 'SOCY699C', 'SOCY699D', 'SOCY699E', 'SOCY699M', 'SOCY709D', 'SOCY789D', 'SOCY799', 'SOCY819', 'SOCY829', 'SOCY849', 'SOCY858', 'SOCY869', 'SOCY889', 'SOCY898', 'SOCY899', 'SPAN103', 'SPAN203', 'SPAN204', 'SPAN206', 'SPAN207', 'SPAN234', 'SPAN234H', 'SPAN301', 'SPAN303', 'SPAN306', 'SPAN311', 'SPAN316', 'SPAN325', 'SPAN331', 'SPAN333', 'SPAN361', 'SPAN363', 'SPAN370', 'SPAN372', 'SPAN374', 'SPAN375', 'SPAN386', 'SPAN399', 'SPAN408K', 'SPAN408W', 'SPAN422', 'SPAN425', 'SPAN460', 'SPAN479', 'SPAN495', 'SPAN625', 'SPAN699', 'SPAN798O', 'SPAN798U', 'SPAN798V', 'SPAN799', 'SPAN898', 'SPAN899', 'SPHL100', 'SPHL240', 'SPHL246', 'SPHL600', 'SPHL601', 'SPHL602', 'SPHL603', 'SPHL612', 'SPHL620', 'STAT100', 'STAT386', 'STAT400', 'STAT401', 'STAT410', 'STAT420', 'STAT426', 'STAT430', 'STAT440', 'STAT464', 'STAT470', 'STAT498A', 'STAT600', 'STAT689', 'STAT700', 'STAT702', 'STAT705', 'STAT740', 'STAT770', 'STAT799', 'STAT808A', 'STAT818A', 'STAT898', 'STAT899', 'SURV410', 'SURV615', 'SURV617', 'SURV621', 'SURV632', 'SURV650', 'SURV699', 'SURV699T', 'SURV699U', 'SURV699Z', 'SURV720', 'SURV725', 'SURV727', 'SURV740', 'SURV829', 'SURV898', 'SURV899', 'TDPS201', 'TDPS258C', 'TDPS362', 'TDPS440', 'TDPS458O', 'TDPS458W', 'TDPS458X', 'TDPS469', 'TDPS479', 'THET110', 'THET116', 'THET120', 'THET222', 'THET223', 'THET274', 'THET284', 'THET285', 'THET286', 'THET310', 'THET325', 'THET330', 'THET340', 'THET351', 'THET371', 'THET372', 'THET386', 'THET390', 'THET399', 'THET408X', 'THET408Z', 'THET411', 'THET428L', 'THET429', 'THET472', 'THET473', 'THET477', 'THET481', 'THET491', 'THET499', 'THET499B', 'THET600', 'THET606', 'THET608C', 'THET639', 'THET649', 'THET659', 'THET669', 'THET669F', 'THET669P', 'THET669W', 'THET700', 'THET713', 'THET788', 'THET789', 'THET799', 'THET888', 'THET889', 'THET898', 'THET899', 'TLPL101', 'TLPL102', 'TLPL250', 'TLPL251', 'TLPL288D', 'TLPL288R', 'TLPL288W', 'TLPL298', 'TLPL305B', 'TLPL305M', 'TLPL312', 'TLPL321', 'TLPL340', 'TLPL360', 'TLPL401', 'TLPL403', 'TLPL413', 'TLPL414', 'TLPL420', 'TLPL423', 'TLPL425', 'TLPL433', 'TLPL436', 'TLPL440', 'TLPL442', 'TLPL443', 'TLPL445', 'TLPL446', 'TLPL447', 'TLPL450', 'TLPL451', 'TLPL456', 'TLPL457', 'TLPL462', 'TLPL470', 'TLPL471', 'TLPL475', 'TLPL478A', 'TLPL479A', 'TLPL479B', 'TLPL479C', 'TLPL479D', 'TLPL479E', 'TLPL479F', 'TLPL479G', 'TLPL479J', 'TLPL481', 'TLPL488B', 'TLPL488F', 'TLPL488R', 'TLPL489', 'TLPL489G', 'TLPL498', 'TLPL631', 'TLPL645', 'TLPL650', 'TLPL653', 'TLPL656', 'TLPL657', 'TLPL661', 'TLPL662', 'TLPL664', 'TLPL665', 'TLPL666', 'TLPL670', 'TLPL675', 'TLPL677', 'TLPL687', 'TLPL689', 'TLPL695', 'TLPL696', 'TLPL698', 'TLPL699', 'TLPL702', 'TLPL708A', 'TLPL713', 'TLPL728', 'TLPL743', 'TLPL762', 'TLPL765', 'TLPL767', 'TLPL788D', 'TLPL788E', 'TLPL788G', 'TLPL788N', 'TLPL788O', 'TLPL788U', 'TLPL788W', 'TLPL789', 'TLPL791', 'TLPL794', 'TLPL798', 'TLPL799', 'TLPL888', 'TLPL889', 'TLPL898', 'TLPL899', 'TLTC333', 'TLTC399', 'TLTC798', 'UMEI002', 'UMEI003', 'UMEI004', 'UMEI005', 'UMEI006', 'UMEI007', 'UMEI008', 'UNIV099', 'UNIV100', 'UNIV100V', 'UNIV106', 'UNIV108', 'UNIV362', 'UNIV389A', 'UNIV389J', 'UNIV399', 'URSP250', 'URSP399I', 'URSP601', 'URSP603', 'URSP605', 'URSP606', 'URSP688C', 'URSP688L', 'URSP688N', 'URSP688P', 'URSP688X', 'URSP688Z', 'URSP708', 'URSP709', 'URSP710', 'URSP788', 'URSP798', 'URSP799', 'URSP804', 'URSP810', 'URSP898', 'URSP899', 'USLT201', 'USLT498A', 'USLT498E', 'VMSC610', 'VMSC660', 'VMSC689', 'VMSC698', 'VMSC699', 'VMSC760', 'VMSC780', 'VMSC799', 'VMSC898', 'VMSC899', 'WMST200', 'WMST250', 'WMST255', 'WMST263', 'WMST275', 'WMST298D', 'WMST298N', 'WMST300', 'WMST314', 'WMST319C', 'WMST319D', 'WMST325', 'WMST336', 'WMST350', 'WMST379A', 'WMST379B', 'WMST386', 'WMST400', 'WMST468L', 'WMST488C', 'WMST498A', 'WMST498V', 'WMST498W', 'WMST498Y', 'WMST499', 'WMST601', 'WMST618', 'WMST619', 'WMST628', 'WMST699', 'WMST709', 'WMST799', 'WMST898', 'WMST899']

class color:
   UNDERLINE = '\033[4m'
   END = '\033[0m'
print('Please enter classes from Unversity of Maryland and all instructors\nteaching the class will be shown with their rating from ratemyprofessors.com')
print('THIS FILE WILL BE SAVED AS A TXT')
file_n = input('Please choose a file name:')
file = file_n +'.txt'
sem = input('Are you looking for classes in Fall 2020 or Summer 2020?')
while True:
    sem = sem.lower().replace('0', '').replace('1', '').replace('2', '').replace('3', '').replace('4', '').replace('5', '').replace('6', '').replace('7', '').replace('8', '').replace('9', '').replace(' ', '')
    if sem == 'fall':
        break
    if sem == 'summer':
        break
    sem = input('Please enter fall or summer.')
f = open(file, 'w')
if sem == 'fall':
    sem = '8'
    f.write('FALL 2020')
else:
    sem = '5'
    f.write('SUMMER 2020')
c_list = []
i = input('Would you like to look at the classes offered at Univeristy of Maryland? (yes or no)')
if i == 'yes':
    CLASSES()
    print('\n\nNow that you have your classes saved under the file CLASSES.txt')
print("\n\nPlease enter class by class and enter 'done' when finished.")
print('NOT CASE SENSITIVE!!!')
print('You can choose as many classes as you would like. Make sure you type classes in the form of aaaa1111 (EX. INST126)')
while True:
    c = input('Please enter a course:')
    c = c.upper()
    if c == 'DONE':
        break
    if c in courses:
        if c in c_list:
            print('Course already added!\n')
        else:
            c_list.append(c)
            print('Course added!\n')
    if c not in courses:
        print('Sorry that is not a valid reponse. Please be careful when entering course.\n')
bbb = []
bbbb = []
count = 1
for c in c_list:
    credits = []
    _c = c[:4]
    empty = ''
    data = []
    u = 'https://app.testudo.umd.edu/soc/20200%s/%s/%s'%(sem,_c, c)
    link = urllib.request.urlopen(u)
    for each in link:
        each = each.decode().strip().rstrip()
        cred = re.findall('course-min-credits">(.*)<', each)
        if len(cred)>0:
            cred = str(cred).replace('"', '').replace("'", "").replace('[', '').replace(']', '')
            credits.append(cred)
        empty = empty + each + '\n'
        x = re.findall('section delivery-', each)
        if len(x)>0:
            data.append(empty)
            empty = ''
        y = re.findall('</html', each)
        if len(y)>0:
            data.append(empty)
        

    data = data[1:]
    a=[]
    b = []
    bb = []
    section = []
    rate_my_prof = []
    for each in data:
        prof = re.findall('section-instructor">(.*)<',each)
        if len(prof)>0:
            prof = str(prof).replace('"', '').replace("'", "").replace('[', '').replace(']', '')
            a.append(prof)
            if prof not in rate_my_prof:
                rate_my_prof.append(prof)
            prof_search = str(prof).replace("'", "").replace('[', '').replace(']', '').split()
            prof_search = prof_search[0]+'+'+prof_search[1]
            if prof_search == 'Instructor:+TBA':
                a.append('N/A/5')
            else:
                url = 'https://www.ratemyprofessors.com/search.jsp?query=%s+maryland'%(prof_search)
                link = urllib.request.urlopen(url)
                for line in link:
                    line = line.decode().strip()
                    no = re.findall("Your search didn't return any results.", line)
                    if len(no)>0:
                        a.append('N/A')
                        break
                    x = re.findall('(ShowRatings.jsp?.*)"', line)
                    if len(x)>0:
                        x =str(x).replace("'", "").replace('[', '').replace(']', '')
                        url1 = 'https://www.ratemyprofessors.com/%s'%(x)
                        link1 = urllib.request.urlopen(url1)
                        for line in link1:
                            line = line.decode().strip()
                            x = re.findall('Numerator-qw8sqy-2 gxuTRq">(\S+)<', line)
                            if len(x)>0:
                                x = str(x).replace('</div>', '').replace('"', '').replace("'", "").replace('[', '').replace(']', '')
                                x = x+'/5'
                                a.append(x)
        day = re.findall('section-days">(.*)<',each)
        if len(day)>0:
            day = str(day).replace('"', '').replace("'", "").replace('[', '').replace(']', '')
            a.append(day)
        time = re.findall('class-start-time">(.*)</span> - <span class="class-end-time">(.*)<',each)
        if len(time)>0:
            time = str(time).replace('"', '').replace("'", "").replace('[', '').replace(']', '').replace('(', '').replace(')', '')
            a.append(time)
        online = re.findall('ONLINE', each)
        if len(online)>0:
            online = str(online).replace('"', '').replace("'", "").replace('[', '').replace(']', '')
            a.append(online)
        code = re.findall('<input type="hidden" name="sectionId" value="(.*)"', each)
        if len(code)>0:
            if code not in section:
                section = []
                section.append(code)
                a.append(section)
        opn = re.findall('open-seats-count">(.*)<', each)
        if len(opn)>0:
            opn = str(opn).replace('"', '').replace("'", "").replace('[', '').replace(']', '')
            a.append(opn)
        t = re.findall('total-seats-count">(.*)<', each)
        if len(t)>0:
            t = str(t).replace('"', '').replace("'", "").replace('[', '').replace(']', '')
            a.append(t)
        a.append(count)
        count += 1
        b.append(a)
        bbb.append(a)
        a.append(c)
        a.append(credits)
        bbbb.append(a)
        bb.append(a)
        a=[]
    print(color.UNDERLINE+'\n'+c+'\n'+color.END)
    f.write('\n\n')
    f.write(c)
    f.write('\n\n')
    print('Instructor:                    Days        Time                 Rating     Section ID      Open Seats        CN')
    f.write('Instructor:                    Days        Time                 Rating     Section ID      Open Seats        CN')
    f.write('\n')
    for each in b:
        if each[0] == 'Instructor: TBA':
            each[0] = each[0].replace('Instructor: TBA', 'TBA')
        if len(each[2].split(', ')) == 2:
            print('_________________________________________________________________________________________________________')
            print('%-30s %-11s %-20s %-10s %-15s %-3sout of %-7s %s'%(each[0], each[2].split(', ')[0], each[3].split(', ')[0]+'-'+each[3].split(', ')[1], each[1], each[4][0][0], each[5], each[6], each[7]))
            print('%-30s %-11s %s'%(' ', each[2].split(', ')[1], each[3].split(', ')[2]+'-'+each[3].split(', ')[3]))
            f.write('______________________________________________________________________________________________________')
            f.write('\n')
            f.write('%-30s %-11s %-20s %-10s %-15s %-3sout of %-7s %s'%(each[0], each[2].split(', ')[0], each[3].split(', ')[0]+'-'+each[3].split(', ')[1], each[1], each[4][0][0], each[5], each[6], each[7]))
            f.write('\n')
            f.write('%-30s %-11s %s'%(' ', each[2].split(', ')[1], each[3].split(', ')[2]+'-'+each[3].split(', ')[3]))
            f.write('\n')
        if len(each[2].split(', ')) == 1:
            if each[2] == 'ONLINE':
                print('______________________________________________________________________________________________________')
                print('%-30s %-32s %-10s %-15s %-3sout of %-7s %s\n'%(each[0], each[2], each[1], each[3][0][0], each[4], each[5], each[6]))
                f.write('______________________________________________________________________________________________________')
                f.write('\n')
                f.write('%-30s %-32s %-10s %-15s %-3sout of %-7s %s\n'%(each[0], each[2], each[1], each[3][0][0], each[4], each[5], each[6]))
                f.write('\n')
            else:
                print('______________________________________________________________________________________________________')
                print('%-30s %-11s %-20s %-10s %-15s %-3sout of %-7s %s\n'%(each[0], each[2], each[3].split(', ')[0]+'-'+each[3].split(', ')[1], each[1], each[4][0][0], each[5], each[6], each[7]))
                f.write('______________________________________________________________________________________________________')
                f.write('\n')
                f.write('%-30s %-11s %-20s %-10s %-15s %-3sout of %-7s %s\n'%(each[0], each[2], each[3].split(', ')[0]+'-'+each[3].split(', ')[1], each[1], each[4][0][0], each[5], each[6], each[7]))
                f.write('\n')

count = 0
cn_inf = {}
t = {}
for each in bbb:
    if each[2] != 'ONLINE':
        each[3]=each[3].split(', ')
for each in bbb:
    if each[2] != 'ONLINE':
        l=[]
        for x in each[3]:
            if x.startswith('12'):
                x = x.replace(':','').replace('pm', ' 0000')
                l.append(x)
            if 'pm' in x:
                x = x.replace(':','').replace('pm', ' 1000')
                l.append(x)
            if 'am' in x:
                x = x.replace(':','').replace('am', ' 0000')
                l.append(x)
    each[3] = l
for each in bbb:
    if each[2] != 'ONLINE':
        l = []
        for x in each[3]:
            x = x.split(' ')
            x = int(x[0]) + int(x[1])
            l.append(x)
        each[3] = l
for each in bbb:
    if each[2]=='ONLINE':
        cn_inf[each[6]]=each
        t[each[6]] = [each[0]] + [each[2]]
    if each[2]=='MW, F':
        t[each[7]] = [each[0]] + [[each[2].split(', ')[0][0]] + [each[3][0]]+[each[3][1]]]
        t[each[7]] += [[each[2].split(', ')[0][1]] + [each[3][0]]+[each[3][1]]]
        t[each[7]] += [[each[2].split(', ')[1]] + [each[3][2]]+[each[3][3]]]
    if each[2] == 'Tu, Th':
        t[each[7]] = [each[0]] + [[each[2].split(', ')[0]] + [each[3][0]]+[each[3][1]]]
        t[each[7]] += [[each[2].split(', ')[1]] + [each[3][2]]+[each[3][3]]]
    if each[2] == 'TuTh':
        t[each[7]] = [each[0]] + [[each[2][:2]] + [each[3][0]]+[each[3][1]]]
        t[each[7]] += [[each[2][2:]] + [each[3][0]]+[each[3][1]]]
    if each[2] == 'MWF':
        t[each[7]] = [each[0]] + [[each[2].split()[0][0]]+each[3]]
        t[each[7]] += [[each[2].split()[0][1]]+each[3]]
        t[each[7]] += [[each[2].split()[0][2]]+each[3]]
sch = {'M':[[0, 0]],'Tu':[[0, 0]],'W':[[0, 0]],'Th':[[0, 0]],'F':[[0, 0]]}
s = {}
CN = []
print('\n')
us = []
print('Please enter the CN provided on the right side of the printed classes.')
print('You can add as many classes as you would like.')
print('A class will not be added if hours conflict')
print("Enter '0' when done adding CN.")
while True:    
    u = input("Enter CN ('0' to end) >>>")
    u = int(u)   
    count = 2
    if u in t:
        if len(t[u])==2:
            CN.append(u)
        s = {}
        for each in t[u][1:]:

            if each[0] in sch:
                for every in sch[each[0]]:
                    if (each[1] or each[2]) not in range(every[0], every[1]):

                        s[each[0]] = [each[1], each[2]]
                    else:
                        s = {}            
        for e in t[u][1:]:
            if e[0] not in s:
                s = {}
                if e == 'ONLINE':
                    print('Class added.\n')
                    break
                if u in CN:
                    print('Class already added.\n')
                else:
                    print('Sorry, that class does not fit in with your current schedule due to overlapping hours.\n')
                break

        for x in s:
            if x in sch:
                if u not in CN:
                    CN.append(u)
                    print('Class added.\n')
                sch[x] += [s[x]]
    if u == 0:
        break
print('%-5s %-20s %-20s %s'%('CN', 'CLASS', 'SECTION ID', 'CREDITS'))
f.write('%-5s % -20s %-20s %s\n'%('CN', 'CLASS', 'SECTION ID', 'CREDITS'))
for e in CN:
    for each in bbbb:
        if len(each) == 10:
            if each[7] == e:
                print('%-5s %-20s %-20s %s'%(e, each[8], each[4][0][0], each[9][0]))
                f.write('%-5s %-20s %-20s %s\n'%(e, each[8], each[4][0][0], each[9][0]))
        if len(each) == 9:
            if each[6] == e:
                print('%-5s %-20s %-20s %s'%(e, each[7], each[3][0][0], each[8][0]))
                f.write('%-5s %-20s %-20s %s\n'%(e, each[7], each[3][0][0], each[8][0]))
CL = []
tCL = []
for each in bbbb:
    if each[2] != 'ONLINE':
        if each[7] in CN:
            CL.append(each)
    else:
        if each[6] in CN:
            CL.append(each)
for each in t:
    if each in CN:
        tCL.append([each, t[each]])
print('\n         %-5s %-5s %-5s %-5s %s'%('M','Tu','W','Th','F'))
f.write('\n         %-5s %-5s %-5s %-5s %s\n'%('M','Tu','W','Th','F'))
l = ['M','Tu','W','Th','F']
M = {'6:00': ' ','6:30': ' ','7:00': ' ','7:30': ' ','8:00': ' ','8:30': ' ','9:00': ' ','9:30': ' ','10:00': ' ','10:30': ' ','11:00': ' ','11:30': ' ','12:00': ' ','12:30': ' ','13:00': ' ','13:30': ' ','14:00': ' ','14:30': ' ','15:00': ' ','15:30': ' ','16:00': ' ','16:30': ' ','17:00': ' ','17:30': ' ','18:00': ' ','18:30': ' ','19:00': ' ','19:30': ' ','20:00': ' ','20:30': ' ','21:00': ' ','21:30': ' ','22:00': ' ','22:30': ' ','23:00': ' ','23:30': ' ','24:00': ' ','24:30': ' '}
Tu = {'6:00': ' ','6:30': ' ','7:00': ' ','7:30': ' ','8:00': ' ','8:30': ' ','9:00': ' ','9:30': ' ','10:00': ' ','10:30': ' ','11:00': ' ','11:30': ' ','12:00': ' ','12:30': ' ','13:00': ' ','13:30': ' ','14:00': ' ','14:30': ' ','15:00': ' ','15:30': ' ','16:00': ' ','16:30': ' ','17:00': ' ','17:30': ' ','18:00': ' ','18:30': ' ','19:00': ' ','19:30': ' ','20:00': ' ','20:30': ' ','21:00': ' ','21:30': ' ','22:00': ' ','22:30': ' ','23:00': ' ','23:30': ' ','24:00': ' ','24:30': ' '}
W = {'6:00': ' ','6:30': ' ','7:00': ' ','7:30': ' ','8:00': ' ','8:30': ' ','9:00': ' ','9:30': ' ','10:00': ' ','10:30': ' ','11:00': ' ','11:30': ' ','12:00': ' ','12:30': ' ','13:00': ' ','13:30': ' ','14:00': ' ','14:30': ' ','15:00': ' ','15:30': ' ','16:00': ' ','16:30': ' ','17:00': ' ','17:30': ' ','18:00': ' ','18:30': ' ','19:00': ' ','19:30': ' ','20:00': ' ','20:30': ' ','21:00': ' ','21:30': ' ','22:00': ' ','22:30': ' ','23:00': ' ','23:30': ' ','24:00': ' ','24:30': ' '}
Th = {'6:00': ' ','6:30': ' ','7:00': ' ','7:30': ' ','8:00': ' ','8:30': ' ','9:00': ' ','9:30': ' ','10:00': ' ','10:30': ' ','11:00': ' ','11:30': ' ','12:00': ' ','12:30': ' ','13:00': ' ','13:30': ' ','14:00': ' ','14:30': ' ','15:00': ' ','15:30': ' ','16:00': ' ','16:30': ' ','17:00': ' ','17:30': ' ','18:00': ' ','18:30': ' ','19:00': ' ','19:30': ' ','20:00': ' ','20:30': ' ','21:00': ' ','21:30': ' ','22:00': ' ','22:30': ' ','23:00': ' ','23:30': ' ','24:00': ' ','24:30': ' '}
F = {'6:00': ' ','6:30': ' ','7:00': ' ','7:30': ' ','8:00': ' ','8:30': ' ','9:00': ' ','9:30': ' ','10:00': ' ','10:30': ' ','11:00': ' ','11:30': ' ','12:00': ' ','12:30': ' ','13:00': ' ','13:30': ' ','14:00': ' ','14:30': ' ','15:00': ' ','15:30': ' ','16:00': ' ','16:30': ' ','17:00': ' ','17:30': ' ','18:00': ' ','18:30': ' ','19:00': ' ','19:30': ' ','20:00': ' ','20:30': ' ','21:00': ' ','21:30': ' ','22:00': ' ','22:30': ' ','23:00': ' ','23:30': ' ','24:00': ' ','24:30': ' '}
for each in tCL:
    for x in each[1][1:]:
        if x[0] == 'M':
            x = str(x[1])
            if len(x)==3:
                x = x[:1]+':'+x[1:]
            else:
                x = x[:2]+':'+x[2:]
            M[x] = each[0]
        if x[0] == 'Tu':
            x = str(x[1])
            if len(x)==3:
                x = x[:1]+':'+x[1:]
            else:
                x = x[:2]+':'+x[2:]
            Tu[x] = each[0]
        if x[0] == 'W':
            x = str(x[1])
            if len(x)==3:
                x = x[:1]+':'+x[1:]
            else:
                x = x[:2]+':'+x[2:]
            W[x] = each[0]
        if x[0] == 'Th':
            x = str(x[1])
            if len(x)==3:
                x = x[:1]+':'+x[1:]
            else:
                x = x[:2]+':'+x[2:]
            Th[x] = each[0]
        if x[0] == 'F':
            x = str(x[1])
            if len(x)==3:
                x = x[:1]+':'+x[1:]
            else:
                x = x[:2]+':'+x[2:]
            F[x] = each[0]
for each in M and Tu and W and Th and F:
    print('%-8s %-5s %-5s %-5s %-5s %s'%(each, M[each], Tu[each], W[each], Th[each], F[each]))
    f.write('%-8s %-5s %-5s %-5s %-5s %s\n'%(each, M[each], Tu[each], W[each], Th[each], F[each]))
f.close()